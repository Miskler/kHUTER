[gd_scene load_steps=12 format=3 uid="uid://4f8awgh20n3f"]

[ext_resource type="AudioStream" uid="uid://bru1p328jqvdu" path="res://audios/music/loading.mp3" id="2"]
[ext_resource type="Texture2D" uid="uid://dfrtmr767gqi2" path="res://textures/ui/logos/sphere_main.png" id="3"]
[ext_resource type="Texture2D" uid="uid://4fl48u7rkk0f" path="res://textures/ui/logos/sphere_back.png" id="4"]
[ext_resource type="Texture2D" uid="uid://bh51hu7sr8phs" path="res://textures/ui/logos/godotta.jpg" id="5"]
[ext_resource type="FontFile" uid="uid://2g5uiqqsk3i3" path="res://resources/fonts/standart/standart.otf" id="6"]
[ext_resource type="Texture2D" uid="uid://cu43cyuwly3nm" path="res://textures/ui/note.png" id="7"]

[sub_resource type="GDScript" id="1"]
script/source = "extends Control

@export var path = \"\"


func _ready():
	GamesSignInClient.sign_in()
	#Firebase.setSessionTimeoutDuration(120000)
	
	randomize()
	
	#OS.window_fullscreen = true
	
	if !DirAccess.dir_exists_absolute(\"user://SaveGame\"):
		DirAccess.make_dir_absolute(\"user://SaveGame\")
	
	var mode = load_game()
	
	Engine.max_fps = G.game_settings[\"FPS\"]
	
	if mode and G.game_settings[\"boot_menu\"] == false:
		animation_finished(-1)
	else:
		$Animation.play(\"def\")

func load_game():
	var v = G.game_settings[\"version\"]
	
	var file = FileAccess
	if not file.file_exists(G.ways[\"settings\"]):
		G.game_settings[\"mobile\"] = OS.get_name() in [\"Android\", \"BlackBerry 10\", \"WinRT\", \"iOS\"]
		
		file = file.open(G.ways[\"settings\"], FileAccess.WRITE)
		file.store_var(JSON.new().stringify(G.game_settings))
		file.close()
		return false
	file = file.open(G.ways[\"settings\"], FileAccess.READ)
	var test_json_conv = JSON.new()
	test_json_conv.parse(file.get_as_text())
	var data = test_json_conv.get_data()
	if data is Dictionary and data.size() > 0:
		for i in data.keys():
			G.game_settings[i] = data[i]
	G.game_settings[\"old_version\"] = G.game_settings[\"version\"]
	G.game_settings[\"version\"] = v
	file.close()
	
	return true


func animation_finished(_anim_name):
	if path == \"\" or path == null:
		path = \"res://scenes/levels/technical/main_menu.tscn\"
	
	G.get_node(\"Load Screen\").select(path)
"

[sub_resource type="Animation" id="2"]
resource_name = "def"
length = 20.0
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("ColorRect2:color")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0.3),
"transitions": PackedFloat32Array(1),
"update": 0,
"values": [Color(0, 0, 0, 0)]
}
tracks/1/type = "value"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath("Brend:visible_characters")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.3, 2.7, 3.5, 4.2, 4.8, 7.2, 7.5),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1, 1),
"update": 0,
"values": [0, 0, 6, 6, 13, 13, 0]
}
tracks/2/type = "value"
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/path = NodePath("ColorRect3:color")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/keys = {
"times": PackedFloat32Array(0.3, 1, 1.7, 3.4, 7.1),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Color(0, 0, 0, 1), Color(0, 0, 0, 0), Color(0, 0, 0, 0), Color(0, 0, 0, 1), Color(0, 0, 0, 1)]
}
tracks/3/type = "value"
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/path = NodePath("Brend:text")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/keys = {
"times": PackedFloat32Array(0.3, 2.7, 3.6, 7.2),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": ["Sphere", "Sphere", "Sphere
Studio", "Sphere
Studio"]
}
tracks/4/type = "value"
tracks/4/imported = false
tracks/4/enabled = true
tracks/4/path = NodePath("Audio:playing")
tracks/4/interp = 1
tracks/4/loop_wrap = true
tracks/4/keys = {
"times": PackedFloat32Array(0.2, 7.1),
"transitions": PackedFloat32Array(1, 1),
"update": 1,
"values": [true, false]
}
tracks/5/type = "value"
tracks/5/imported = false
tracks/5/enabled = true
tracks/5/path = NodePath("Control:modulate")
tracks/5/interp = 1
tracks/5/loop_wrap = true
tracks/5/keys = {
"times": PackedFloat32Array(0.3, 7.8, 8.4, 9.8, 10.3),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}
tracks/6/type = "value"
tracks/6/imported = false
tracks/6/enabled = true
tracks/6/path = NodePath("Control2:modulate")
tracks/6/interp = 1
tracks/6/loop_wrap = true
tracks/6/keys = {
"times": PackedFloat32Array(0.3, 13.6, 14),
"transitions": PackedFloat32Array(1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 0), Color(1, 1, 1, 1)]
}
tracks/7/type = "value"
tracks/7/imported = false
tracks/7/enabled = true
tracks/7/path = NodePath("Control3:modulate")
tracks/7/interp = 1
tracks/7/loop_wrap = true
tracks/7/keys = {
"times": PackedFloat32Array(10.3, 10.8, 13.3, 13.7),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 0,
"values": [Color(1, 1, 1, 0), Color(1, 1, 1, 1), Color(1, 1, 1, 1), Color(1, 1, 1, 0)]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_rhgqu"]
_data = {
"def": SubResource("2")
}

[sub_resource type="Shader" id="3"]
code = "shader_type canvas_item;

uniform float percentage;
uniform float corner;


float square_rounded(vec2 uv, float width, float radius){
    uv = uv * 2.0 - 1.0;
    
    radius *= width; // make radius go from 0-1 instead of 0-width
    vec2 abs_uv = abs(uv) - radius;
    vec2 dist = vec2(max(abs_uv.xy, 0.0));
    float square = step(width - radius, length(dist));
    return square;
}


void fragment() {
    vec4 main_tex = texture(TEXTURE, UV);
    float avg = (main_tex.r + main_tex.g + main_tex.b) / 3.0;
    main_tex.rgb = mix(main_tex.rgb, vec3(avg), step(percentage, UV.x));
    main_tex.a *= 1.0 - square_rounded(UV, 1.0, corner);
    COLOR = main_tex;
}"

[sub_resource type="ShaderMaterial" id="4"]
shader = SubResource("3")
shader_parameter/percentage = 1.0
shader_parameter/corner = 0.581

[node name="Load" type="Control"]
process_mode = 2
layout_mode = 3
anchors_preset = 15
anchor_right = 1.0
anchor_bottom = 1.0
grow_horizontal = 2
grow_vertical = 2
script = SubResource("1")

[node name="Back" type="ColorRect" parent="."]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
color = Color(0, 0, 0, 1)

[node name="Animation" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_rhgqu")
}

[node name="Audio" type="AudioStreamPlayer" parent="."]
stream = ExtResource("2")
volume_db = 13.388

[node name="SphereBack" type="TextureRect" parent="."]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource("4")
expand_mode = 1

[node name="HuterWorld" type="TextureRect" parent="."]
layout_mode = 0
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -287.5
offset_top = -281.5
offset_right = 287.5
offset_bottom = 281.5
texture = ExtResource("3")
expand_mode = 1

[node name="ColorRect3" type="ColorRect" parent="."]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
color = Color(0, 0, 0, 1)

[node name="Brend" type="Label" parent="."]
layout_mode = 0
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -316.5
offset_top = -163.5
offset_right = 316.5
offset_bottom = 163.5
theme_override_fonts/font = ExtResource("6")
theme_override_font_sizes/font_size = 120
text = "Sphere
Studio"
horizontal_alignment = 1
vertical_alignment = 1
visible_characters = 0
visible_ratio = 0.0

[node name="ColorRect2" type="ColorRect" parent="."]
layout_mode = 0
anchor_right = 1.0
anchor_bottom = 1.0
color = Color(0, 0, 0, 0)

[node name="Control" type="Control" parent="."]
modulate = Color(1, 1, 1, 0)
anchors_preset = 0
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Godotta" type="TextureRect" parent="Control"]
material = SubResource("4")
layout_mode = 0
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -482.0
offset_top = -175.0
offset_right = -132.0
offset_bottom = 175.0
texture = ExtResource("5")
expand_mode = 1

[node name="Label3" type="Label" parent="Control"]
layout_mode = 0
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -112.0
offset_top = -103.5
offset_right = 478.0
offset_bottom = 103.5
theme_override_fonts/font = ExtResource("6")
theme_override_font_sizes/font_size = 60
text = "Godot Game Engine"
vertical_alignment = 1

[node name="Control3" type="Control" parent="."]
modulate = Color(1, 1, 1, 0)
anchors_preset = 0
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Label3" type="Label" parent="Control3"]
layout_mode = 0
anchor_left = 0.1
anchor_top = 0.3
anchor_right = 0.9
anchor_bottom = 0.9
theme_override_fonts/font = ExtResource("6")
theme_override_font_sizes/font_size = 50
text = "Мы рекомендуем играть с включенным звуком!"
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 2

[node name="TextureRect" type="TextureRect" parent="Control3"]
layout_mode = 0
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
offset_left = -100.0
offset_top = -240.0
offset_right = 100.0
offset_bottom = -40.0
texture = ExtResource("7")
expand_mode = 1

[node name="Control2" type="Control" parent="."]
modulate = Color(1, 1, 1, 0)
anchors_preset = 0
anchor_right = 1.0
anchor_bottom = 1.0

[node name="Label" type="Label" parent="Control2"]
modulate = Color(1, 0, 0, 1)
layout_mode = 0
anchor_right = 1.0
offset_bottom = 155.0
theme_override_fonts/font = ExtResource("6")
theme_override_font_sizes/font_size = 90
text = "Внимание!"
horizontal_alignment = 1
vertical_alignment = 1

[node name="Label2" type="Label" parent="Control2"]
layout_mode = 1
anchors_preset = -1
anchor_left = 0.1
anchor_top = 0.1
anchor_right = 0.9
anchor_bottom = 0.9
offset_left = -0.200005
offset_top = 0.199997
offset_right = -20.7999
offset_bottom = -0.200012
theme_override_fonts/font = ExtResource("6")
theme_override_font_sizes/font_size = 50
text = "Эта игра создаётся небольшой командой. Если вы столкнулись с ошибками/недочетами вы всегда можете написать отзыв как можно улучшить игру!"
horizontal_alignment = 1
vertical_alignment = 1
autowrap_mode = 3

[connection signal="animation_finished" from="Animation" to="." method="animation_finished"]
