[gd_scene load_steps=157 format=2]

[ext_resource path="res://textures/ui/android/sword.png" type="Texture" id=1]
[ext_resource path="res://textures/ui/statuses/battery.png" type="Texture" id=2]
[ext_resource path="res://textures/ui/android/pixel_circle.png" type="Texture" id=3]
[ext_resource path="res://textures/ui/android/inventory.png" type="Texture" id=4]
[ext_resource path="res://textures/ui/android/сhat_icon.png" type="Texture" id=5]
[ext_resource path="res://textures/ui/android/move_x.png" type="Texture" id=6]
[ext_resource path="res://textures/ui/statuses/heart.png" type="Texture" id=7]
[ext_resource path="res://textures/ui/icons/book/book_open.png" type="Texture" id=8]
[ext_resource path="res://textures/ui/bubble.png" type="Texture" id=9]
[ext_resource path="res://textures/ui/android/move_jump.png" type="Texture" id=10]
[ext_resource path="res://textures/ui/android/move_down.png" type="Texture" id=11]
[ext_resource path="res://textures/ui/warnings/low_bat.png" type="Texture" id=12]
[ext_resource path="res://textures/ui/icons/arrow.png" type="Texture" id=13]
[ext_resource path="res://textures/ui/statuses/heating.png" type="Texture" id=14]
[ext_resource path="res://textures/ui/warnings/low_hp.png" type="Texture" id=15]
[ext_resource path="res://textures/ui/android/drop.png" type="Texture" id=16]
[ext_resource path="res://textures/ui/android/gear_button.png" type="Texture" id=17]
[ext_resource path="res://textures/ui/clothes.png" type="Texture" id=18]
[ext_resource path="res://textures/ui/warnings/high_temp.png" type="Texture" id=19]
[ext_resource path="res://textures/ui/logos/godotta.jpg" type="Texture" id=20]
[ext_resource path="res://resources/themes/main.theme" type="Theme" id=21]
[ext_resource path="res://scenes/interface/interface_elements/slot_item.tscn" type="PackedScene" id=22]
[ext_resource path="res://scenes/interface/interface_elements/move_item.tscn" type="PackedScene" id=23]
[ext_resource path="res://resources/fonts/standart/small.otf" type="DynamicFontData" id=24]
[ext_resource path="res://resources/fonts/standart/standart.otf" type="DynamicFontData" id=25]

[sub_resource type="GDScript" id=76]
script/source = "extends CanvasLayer


func _ready():
	for i in [$main/JumpButtons, $main/RunButtons, $main/Shoot, $main/AndroidButtons, $inventory/InventoryOpen, $chat/Chat]:
		i.visible = G.game_settings[\"mobile\"]


func slots_off_and_on(block:int = 0, mode:bool = false):
	var interfaces = [\"крафт\", \"эгипировка\", \"сундук\", \"инвентарь\", \"основа\"]
	
	if mode:
		print(\"Главная нода интерфейса игрока: В интерфейсе \\\"\"+interfaces[block]+\"\\\" ячейки ОТКЛЮЧЕНЫ\")
	else:
		print(\"Главная нода интерфейса игрока: В интерфейсе \\\"\"+interfaces[block]+\"\\\" ячейки ВКЛЮЧЕНЫ\")
	
	if block == 0:
		for i in range(9):
			get_node(\"craft_menu/Control/CraftSlot\"+str(i)).settings_slot[\"slot_off\"] = mode
		
		get_node(\"craft_menu/Control/OutputCraftSlot9\").settings_slot[\"slot_off\"] = mode
	elif block == 1:
		get_node(\"clothes/Control/HeadSlot\").settings_slot[\"slot_off\"] = mode
		get_node(\"clothes/Control/TorsoSlot\").settings_slot[\"slot_off\"] = mode
		get_node(\"clothes/Control/LegsSlot\").settings_slot[\"slot_off\"] = mode
		get_node(\"clothes/Control/MainArmSlot\").settings_slot[\"slot_off\"] = mode
		get_node(\"clothes/Control/AdditionalArmSlot\").settings_slot[\"slot_off\"] = mode
	elif block == 2:
		for i in get_node(\"chest/Control/ScrollContainer/GridContainer\").get_children():
			i.settings_slot[\"slot_off\"] = mode
	elif block == 3:
		for i in get_node(\"inventory/Control/ScrollContainer/GridContainer\").get_children():
			i.settings_slot[\"slot_off\"] = mode
	elif block == 4:
		for i in get_node(\"main/HBoxContainer\").get_children():
			i.settings_slot[\"slot_off\"] = mode
"

[sub_resource type="Shader" id=134]
code = "shader_type canvas_item;

uniform sampler2D noise;
uniform float intensity = 0.01;
uniform float blur : hint_range(0, 10) = 0.0;
uniform float size : hint_range(0, 10) = 0.0;

uniform vec2 resolution = vec2(80, 100);


// fragment() runs on every pixel
void fragment (){

    // sample the texture
    vec4 tex_color = texture(TEXTURE, UV);

    // determine center of texture
    vec2 position = (FRAGCOORD.xy / resolution.xy) - vec2(0.5, 0.5);

    // determine length of current pixel to center of texture
    float len = length(position);

    // visualize length for debugging purposes
    //COLOR = vec4(vec3(len), 1.0);
    
	
	float vignette = clamp(length(SCREEN_UV - 0.5) * (size), 0.0, 0.7);
	vignette = pow(vignette, 2.0);
	
    vec2 uv = vec2(SCREEN_UV);
    uv += ((texture(noise, uv + vec2(TIME/10.0,TIME/1.0)).rb-vec2(.53))*intensity)*vignette;

	COLOR = vec4(texture(SCREEN_TEXTURE, uv, blur * vignette).rgb, 1.0);
}"

[sub_resource type="OpenSimplexNoise" id=135]

[sub_resource type="NoiseTexture" id=136]
width = 100
height = 100
seamless = true
noise = SubResource( 135 )

[sub_resource type="ShaderMaterial" id=137]
shader = SubResource( 134 )
shader_param/intensity = 0.098
shader_param/blur = 9.604
shader_param/size = 1.5
shader_param/resolution = Vector2( 1, 1 )
shader_param/noise = SubResource( 136 )

[sub_resource type="GDScript" id=151]
script/source = "extends ColorRect


onready var PL = get_node(\"/root/rootGame/Node/Player\")

var dos = true
func _ready():
	dos = true
	PL = get_node(\"/root/rootGame/Node/Player\")
func _process(_delta):
	if dos:
		dos = false
		var tween = create_tween()
		
		tween.tween_property($\".\".material, \"shader_param/intensity\", PL.well_being[\"thirst\"]/20.0, 1.0)
		tween.tween_property($\".\".material, \"shader_param/blur\", PL.well_being[\"thirst\"]*5.0, 1.0)
		
		tween.play()
		
		yield(tween, \"finished\")
		dos = true
"

[sub_resource type="DynamicFont" id=93]
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=94]
default_font = SubResource( 93 )

[sub_resource type="GDScript" id=57]
script/source = "extends Control

onready var PL = get_node(\"/root/rootGame/Node/Player\")
var battary_sprites =[
	2, # 0
	4, # 1
	6, # 2
	8, # 3
	10, # 4
	13, # 5
	17, # 6
	20 # 7
]
var health_sprites = [
	6, # 0
	12, # 1
	18, # 2
	24, # 3
	30, # 4
	36, # 5
	42, # 6
	48, # 7
	54, # 8
	60, # 9
	66, # 10
	72, # 11
	78, # 12
	84, # 13
	90, # 14
	100 # 15
]

var heating_sprites = [
	1.0,
	0.8,
	0.6,
	0.4,
	0.2,
	0.0
]

func _process(_delta):
	health()
	battary()
	heating()

func health():
	$Box/LowHealth.visible = PL.well_being[\"health\"] <= 50.0
	for i in range(health_sprites.size()):
		if PL.well_being[\"health\"] <= health_sprites[i]:
			$health.frame = i
			return
func battary():
	$Box/LowBat.visible = PL.well_being[\"hunger\"] <= 10
	for i in range(battary_sprites.size()):
		if PL.well_being[\"hunger\"] <= battary_sprites[i]:
			$battery.frame = i
			return
func heating():
	$Box/HighTemp.visible = PL.well_being[\"thirst\"] >= 0.8
	for i in range(heating_sprites.size()):
		if PL.well_being[\"thirst\"] >= heating_sprites[i]:
			$heating.frame = i
			return


signal frame_close()
func frame():
	if G.game_settings[\"mobile\"]:
		emit_signal(\"frame_close\")
func on_frame():
	emit_signal(\"frame_close\")
"

[sub_resource type="AtlasTexture" id=117]
atlas = ExtResource( 14 )
region = Rect2( 0, 0, 70, 70 )

[sub_resource type="AtlasTexture" id=118]
atlas = ExtResource( 14 )
region = Rect2( 70, 0, 70, 70 )

[sub_resource type="AtlasTexture" id=119]
atlas = ExtResource( 14 )
region = Rect2( 140, 0, 70, 70 )

[sub_resource type="AtlasTexture" id=120]
atlas = ExtResource( 14 )
region = Rect2( 210, 0, 70, 70 )

[sub_resource type="AtlasTexture" id=121]
atlas = ExtResource( 14 )
region = Rect2( 280, 0, 70, 70 )

[sub_resource type="AtlasTexture" id=122]
atlas = ExtResource( 14 )
region = Rect2( 350, 0, 70, 70 )

[sub_resource type="SpriteFrames" id=123]
animations = [ {
"frames": [ SubResource( 117 ), SubResource( 118 ), SubResource( 119 ), SubResource( 120 ), SubResource( 121 ), SubResource( 122 ) ],
"loop": true,
"name": "def",
"speed": 5.0
} ]

[sub_resource type="AtlasTexture" id=100]
atlas = ExtResource( 7 )
region = Rect2( 0, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=101]
atlas = ExtResource( 7 )
region = Rect2( 40, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=102]
atlas = ExtResource( 7 )
region = Rect2( 80, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=103]
atlas = ExtResource( 7 )
region = Rect2( 120, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=104]
atlas = ExtResource( 7 )
region = Rect2( 160, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=105]
atlas = ExtResource( 7 )
region = Rect2( 200, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=106]
atlas = ExtResource( 7 )
region = Rect2( 240, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=107]
atlas = ExtResource( 7 )
region = Rect2( 280, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=108]
atlas = ExtResource( 7 )
region = Rect2( 320, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=109]
atlas = ExtResource( 7 )
region = Rect2( 360, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=110]
atlas = ExtResource( 7 )
region = Rect2( 400, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=111]
atlas = ExtResource( 7 )
region = Rect2( 440, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=112]
atlas = ExtResource( 7 )
region = Rect2( 480, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=113]
atlas = ExtResource( 7 )
region = Rect2( 520, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=114]
atlas = ExtResource( 7 )
region = Rect2( 560, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=115]
atlas = ExtResource( 7 )
region = Rect2( 600, 0, 40, 40 )

[sub_resource type="SpriteFrames" id=116]
animations = [ {
"frames": [ SubResource( 100 ), SubResource( 101 ), SubResource( 102 ), SubResource( 103 ), SubResource( 104 ), SubResource( 105 ), SubResource( 106 ), SubResource( 107 ), SubResource( 108 ), SubResource( 109 ), SubResource( 110 ), SubResource( 111 ), SubResource( 112 ), SubResource( 113 ), SubResource( 114 ), SubResource( 115 ) ],
"loop": true,
"name": "def",
"speed": 5.0
} ]

[sub_resource type="AtlasTexture" id=124]
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=125]
atlas = ExtResource( 2 )
region = Rect2( 40, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=126]
atlas = ExtResource( 2 )
region = Rect2( 80, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=127]
atlas = ExtResource( 2 )
region = Rect2( 120, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=128]
atlas = ExtResource( 2 )
region = Rect2( 160, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=129]
atlas = ExtResource( 2 )
region = Rect2( 200, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=130]
atlas = ExtResource( 2 )
region = Rect2( 240, 0, 40, 40 )

[sub_resource type="AtlasTexture" id=131]
atlas = ExtResource( 2 )
region = Rect2( 280, 0, 40, 40 )

[sub_resource type="SpriteFrames" id=132]
animations = [ {
"frames": [ SubResource( 124 ), SubResource( 125 ), SubResource( 126 ), SubResource( 127 ), SubResource( 128 ), SubResource( 129 ), SubResource( 130 ), SubResource( 131 ) ],
"loop": true,
"name": "def",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=171]
extents = Vector2( 220, 60 )

[sub_resource type="AtlasTexture" id=140]
atlas = ExtResource( 12 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=141]
atlas = ExtResource( 12 )
region = Rect2( 32, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=142]
atlas = ExtResource( 15 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=143]
atlas = ExtResource( 15 )
region = Rect2( 32, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=144]
atlas = ExtResource( 15 )
region = Rect2( 64, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=145]
atlas = ExtResource( 15 )
region = Rect2( 96, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=146]
atlas = ExtResource( 19 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=147]
atlas = ExtResource( 19 )
region = Rect2( 32, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=148]
atlas = ExtResource( 19 )
region = Rect2( 64, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=149]
atlas = ExtResource( 19 )
region = Rect2( 96, 0, 32, 32 )

[sub_resource type="SpriteFrames" id=150]
animations = [ {
"frames": [ SubResource( 140 ), SubResource( 141 ) ],
"loop": true,
"name": "bat",
"speed": 1.0
}, {
"frames": [ SubResource( 142 ), SubResource( 143 ), SubResource( 144 ), SubResource( 145 ) ],
"loop": true,
"name": "gear",
"speed": 5.0
}, {
"frames": [ SubResource( 146 ), SubResource( 147 ), SubResource( 148 ), SubResource( 149 ) ],
"loop": true,
"name": "temp",
"speed": 5.0
} ]

[sub_resource type="GDScript" id=153]
script/source = "extends Control

var press = false
onready var player = $\"../../../../\"


var vec = Vector2.ZERO
var rot = 0


signal shot()


func down():
	press = true
	#$\"../RunButtons/TouchUp\".show()
func up():
	press = false
	#$\"../RunButtons/TouchUp\".hide()
	
	if clamp(abs(Vector2.ZERO.distance_to($Rot/Rect.rect_position+$Rot/Rect.rect_pivot_offset)), 0, 70) >= 50:
		emit_signal(\"shot\")
		player.shoot(true)
		print(clamp(abs(Vector2.ZERO.distance_to($Rot/Rect.rect_position+$Rot/Rect.rect_pivot_offset)), 0, 70))
	
	$Rot/Rect.rect_position = -$Rot/Rect.rect_pivot_offset
	vec = Vector2.ZERO
	
	recolor(clamp(abs(Vector2.ZERO.distance_to($Rot/Rect.rect_position+$Rot/Rect.rect_pivot_offset)), 0, 70), 50)



func _input(event):
	yield(get_tree(), \"idle_frame\")
	if press and (event is InputEventScreenDrag or event is InputEventScreenTouch):
		var f = clamp(abs($Rot.global_position.distance_to(event.position)), 0, 1000) - $Rot/Rect.rect_pivot_offset.x
		
		if f < 150:
			$Rot/Rect.rect_position.x = clamp(abs($Rot.global_position.distance_to(event.position)), 0, 70) - $Rot/Rect.rect_pivot_offset.x
			
			$Rot.look_at(event.position)
			$Rot/Rect.set_rotation(0 - $Rot.rotation)
			rot = $Rot.rotation
			
			player.get_node(\"Node2D\").rotation = $Rot.rotation
			
			#$\"../RunButtons/TouchUp\".visible = clamp(abs(Vector2.ZERO.distance_to($Rot/Rect.rect_position+$Rot/Rect.rect_pivot_offset)), 0, 70) >= 50# and $Rot.rotation_degrees-90 >
		recolor(clamp(abs(Vector2.ZERO.distance_to($Rot/Rect.rect_position+$Rot/Rect.rect_pivot_offset)), 0, 70), 50)


func recolor(count, maximum):
	var col = [{false: \"a21aae00\", true: \"a2ae0000\"}, {false: \"a21aae00\", true: \"a2ae0000\"}]
	
	printt(count, count >= maximum)
	self_modulate = Color(col[0][count >= maximum])
	$Back.modulate = Color(col[1][count >= maximum])
"

[sub_resource type="RectangleShape2D" id=168]
extents = Vector2( 100, 100 )

[sub_resource type="StyleBoxFlat" id=154]
bg_color = Color( 0, 0.615686, 0.0392157, 1 )
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 3
border_color = Color( 0.0392157, 0.368627, 0, 1 )
border_blend = true
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10
shadow_size = 2
anti_aliasing_size = 0.549

[sub_resource type="StyleBoxFlat" id=155]
bg_color = Color( 0, 0.717647, 0.0117647, 1 )
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 3
border_color = Color( 0.0392157, 0.368627, 0, 1 )
border_blend = true
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10
shadow_size = 2
anti_aliasing_size = 0.549

[sub_resource type="StyleBoxFlat" id=156]
bg_color = Color( 0, 0.772549, 0.0117647, 1 )
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 3
border_color = Color( 0.0392157, 0.368627, 0, 1 )
border_blend = true
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10
shadow_size = 2
anti_aliasing_size = 0.549

[sub_resource type="StyleBoxFlat" id=157]
bg_color = Color( 0, 0.501961, 0.0352941, 1 )
border_width_left = 3
border_width_top = 3
border_width_right = 3
border_width_bottom = 3
border_color = Color( 0.0392157, 0.368627, 0, 1 )
border_blend = true
corner_radius_top_left = 10
corner_radius_top_right = 10
corner_radius_bottom_right = 10
corner_radius_bottom_left = 10
shadow_size = 2
anti_aliasing_size = 0.549

[sub_resource type="Theme" id=158]
Button/styles/disabled = SubResource( 154 )
Button/styles/hover = SubResource( 155 )
Button/styles/normal = SubResource( 156 )
Button/styles/pressed = SubResource( 157 )

[sub_resource type="RectangleShape2D" id=173]
extents = Vector2( 100, 22 )

[sub_resource type="DynamicFont" id=184]
size = 46
outline_size = 3
outline_color = Color( 0, 0, 0, 1 )
extra_spacing_char = -1
font_data = ExtResource( 24 )

[sub_resource type="GDScript" id=185]
script/source = "extends Button

func _ready():
	hide()
	#visible = G.game_settings[\"mobile_use_all\"]
"

[sub_resource type="AtlasTexture" id=183]
atlas = ExtResource( 16 )
region = Rect2( 0, 0, 50, 50 )

[sub_resource type="GDScript" id=164]
script/source = "extends Button

onready var player = $\"../../../../../\"
onready var move_item = $\"../../../MoveItem\"


func _input(event):
	visible = move_item.significant_data.size() > 0
	
	#icon.region.position.y = {false: 0.0, true: 50.0}[pressed]

func _pressed():
	var gen_name = G.name_generate(\"SlotInWorld\", \"/root/rootGame/Node\")
	move_item.put_item(
		move_item.significant_data,
		move_item.insignificant_data, 
		player.global_position, 
		gen_name
	)
	if get_tree().network_peer != null:
		rpc(\"put_item\", move_item.significant_data, move_item.insignificant_data,  player.global_position, gen_name)
	
	move_item.significant_data = move_item.get_node(\"HandSlot\").default_significant_data.duplicate()
	move_item.insignificant_data = move_item.get_node(\"HandSlot\").default_insignificant_data.duplicate()
	move_item.data_updated()


func down():
	icon.region.position.y = {false: 0.0, true: 50.0}[true]
func up():
	icon.region.position.y = {false: 0.0, true: 50.0}[false]
"

[sub_resource type="GDScript" id=165]
script/source = "extends Button

func _pressed():
	icon = load({
		true: \"res://Texture/Other/UI/Available Item.png\", 
		false: \"res://Texture/Other/UI/bubble.png\"
	}[pressed])
"

[sub_resource type="GDScript" id=159]
script/source = "extends Button

onready var player = $\"../../../../../\"

func _pressed():
	player.show_inventory()
"

[sub_resource type="GDScript" id=162]
script/source = "extends Button

onready var player = $\"../../../../../\"

func _pressed():
	player.show_chat()
"

[sub_resource type="GDScript" id=160]
script/source = "extends Button

onready var player = $\"../../../../../\"

func _pressed():
	player.show_menu()
"

[sub_resource type="GDScript" id=166]
script/source = "extends HBoxContainer

var left = false
var right = false

func left_down():
	left = true
func right_down():
	right = true

func right_up():
	right = false
func left_up():
	left = false
"

[sub_resource type="AtlasTexture" id=177]
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 20.081, 20 )

[sub_resource type="AtlasTexture" id=178]
atlas = ExtResource( 6 )
region = Rect2( 20, 0, 20.081, 20 )

[sub_resource type="RectangleShape2D" id=169]

[sub_resource type="RectangleShape2D" id=174]
extents = Vector2( 70, 40 )

[sub_resource type="AtlasTexture" id=179]
atlas = ExtResource( 10 )
region = Rect2( 0, 0, 20, 20 )

[sub_resource type="AtlasTexture" id=180]
atlas = ExtResource( 10 )
region = Rect2( 0, 20, 20, 20 )

[sub_resource type="RectangleShape2D" id=172]

[sub_resource type="AtlasTexture" id=181]
atlas = ExtResource( 11 )
region = Rect2( 0, 0, 20, 20 )

[sub_resource type="AtlasTexture" id=182]
atlas = ExtResource( 11 )
region = Rect2( 0, 20, 20, 20 )

[sub_resource type="RectangleShape2D" id=170]

[sub_resource type="GDScript" id=167]
script/source = "extends VBoxContainer

var down = false
var up = false
var up_jump = false

func down_up():
	down = false
func up_up():
	up = false
	up_jump = false

func up_down():
	up = true
	up_jump = true
func down_down():
	down = true
"

[sub_resource type="RectangleShape2D" id=175]
extents = Vector2( 40, 150 )

[sub_resource type="GDScript" id=186]
script/source = "extends ColorRect


onready var PL = get_node(\"/root/rootGame/Node/Player\")

var dos = true
func _ready():
	dos = true
	PL = get_node(\"/root/rootGame/Node/Player\")
func _process(_delta):
	if dos:
		dos = false
		var tween = create_tween()
		
		tween.tween_property(self, \"color:a\", (1-((PL.well_being[\"health\"])/100.0))*0.2, 0.5)
		
		tween.play()
		
		yield(tween, \"finished\")
		dos = true
"

[sub_resource type="GDScript" id=85]
script/source = "extends Control

onready var SD = get_node(\"/root/rootGame/Node/SettingData\")

#Перменные

var items_in_slots = []
#[[significant_data, insignificant_data], [...]]

var selected_recipes = []
#[название предмета которому пренадлежит крафт, номер рецепта, сколько можно скрафтить]

var existing_recipes = {}
#{\"название предмета которому пренадлежит крафт и номер рецепта\": [тоже самое но по отдельности], \"...\": [...]}

var available_recipes = {}
#{\"название предмета которому пренадлежит крафт и номер рецепта\": [тоже самое но по отдельности], \"...\": [...]}


#Сигналы

#Срабатывает при условии что крафт успешно выполнен, но стоит запрет на удаление предмета
signal no_del_craft_item(slot, significant_data, insignificant_data, selected_recipes)
#Срабатывает у только что созданного предмета
signal item_created(slot, significant_data, insignificant_data)


#Функции

#При вызове возвращает собранный items_in_slots
func get_all_slots():
	var slots_data = []
	for i in range(9):
		var slot = get_node(\"Control/CraftSlot\" + str(i))
		slots_data.append([slot.significant_data, slot.insignificant_data])
	return slots_data

#При вызове возвращает собранный existing_recipes
func learn_all_recipes():
	var recipes = {}
	for i in SD.map_settings[\"crafting\"]:
		var dat = SD.get_node(\"ItemData\").get(i)
		if dat != null:
			var max_id = 0
			for u in range(9):
				if dat[\"slot\"+str(u)].size() > max_id:
					max_id = dat[\"slot\"+str(u)].size()
			
			for u in range(max_id):
				recipes[dat[\"item\"]+str(u)] = [dat[\"item\"], u]
	return recipes

#Принимает existing_recipes, и items_in_slots
#Возвращает собраный anailable_recipes
func check_possibility_creating(recipes, slots):
	var anailable = recipes.duplicate()
	for i in recipes.values():
		for u in range(9):
			if method_check_possibility_creating(i, u, [slots[u][0], slots[u][1]], 1) == false or method_check_possibility_creating(i, u, [slots[u][0], slots[u][1]], 2) == false:
				anailable.erase(i[0] + str(i[1]))
	return anailable
func method_check_possibility_creating(recipes, slot_number, slot_data, type_data:int, craft_data = null): #Как раз та самая рекурсивная функция
	type_data = clamp(type_data, 1, 2)
	
	
	#if craft_data != null and craft_data.size() > 2:
	#	breakpoint
	#print(\"\")
	#printt(\"CRAFT_DATA\", str(craft_data))
	if craft_data == null:
		slot_data = slot_data[type_data-1]
		
		craft_data = SD.get_node(\"ItemData\").get(recipes[0])
		
		if craft_data == null:# or not craft_data.has(\"slot\"+str(slot_number)):
			return true
		printt(\"START\", str(craft_data))
		craft_data = craft_data.get(\"slot\"+str(slot_number))
		if craft_data == null or craft_data.size() - 1 < recipes[1]:
			return true
		
		
		#if craft_data != null and craft_data.size() > 2:
		#	breakpoint
		
		craft_data = craft_data[recipes[1]]
		if craft_data == null or craft_data.size() - 1 < type_data:
			return true
		craft_data = craft_data[type_data]
		if craft_data == null:
			return true
		
		#if craft_data != null and craft_data.size() > 2:
		#	breakpoint
	
	#if craft_data != null and craft_data.size() > 2:
	#	breakpoint
	
	for i in craft_data.keys():
		if craft_data[i] is Vector2:
			var dat_slot = slot_data.get(i)
			if i in [\"health\"]:
				dat_slot = (float(dat_slot[\"current\"])/float(dat_slot[\"maximum\"]))*100
			
			if dat_slot != null and (dat_slot is int or dat_slot is float):
				if craft_data[i].x != -1 and craft_data[i].x > dat_slot:#25 > 30
					return false
				elif craft_data[i].y != -1 and craft_data[i].y < dat_slot:#35 < 30
					return false
			else: return false
		elif (craft_data[i] is Dictionary) and (slot_data[i] is Dictionary):
			if method_check_possibility_creating(recipes, slot_number, slot_data, type_data, craft_data[i]) == false:
				return false
		elif not slot_data.has(i) or slot_data[i].hash() != craft_data[i].hash(): #Проверяем на полное соотвецтвие
			#printt(\"Интерфейс крафта: Данные не совпадают: \", slot_data, craft_data, i)
			return false
	return true

#Принимает selected_recipes и items_in_slots
#Возвращает selected_recipes с изменённым значением 2 ключа
func find_available_quantity(recipes, slots):
	#Этот массив содержит количество предмедметов которое можно скрафтить
	var available_quantity = [] #Для каждого слота отдельно
	
	for i in range(9):
		var d = method_find_available_quantity(recipes, i, slots[i][1])
		if d != null:
			available_quantity.append(d)
	
	#print(\"Интерфейс крафта: Итог: \", available_quantity)
	if available_quantity.size() < 1: available_quantity.append(0)
	recipes = [recipes[0], recipes[1], available_quantity.min()]
	return recipes
func method_find_available_quantity(recipes, number_slot, slots, data = null):
	if data == null:
		data = SD.get_node(\"ItemData\").get(recipes[0])[\"slot\"+str(number_slot)]
		if data.size() > recipes[1]:
			data = data[recipes[1]]
			if data.size() > 1: data = data[2]
			else: return null
		else: return null
	if data == null or data.size() == 0 or slots == null:
		return null
	
	var quantity = []
	for i in data.keys():
		if data[i] is Vector2 and slots.has(i) and data[i].y == -1 and data[i].x != -1:
			#print(\"Интерфейс крафта: Узнал вектор\") #4 / 2.0 * 1 = 4 // 2
			quantity.append(((float(slots.get(i)))/data[i].x)*SD.get_node(\"ItemData\").get(recipes[0])[\"quantity\"])
		elif data[i] is Dictionary:
			#print(\"Интерфейс крафта: Узнал подданные\")
			var d = method_find_available_quantity(recipes, number_slot, slots.get(i), data[i])
			if d != null:
				quantity.append(d)
	#print(\"Интерфейс крафта: Полуитог: \", quantity)
	
	return quantity.min()

#Принимает selected_recipes и изменяет по ниму содержание OutputCraftSlot9
func add_item(recipes):
	var data = $Control/OutputCraftSlot9.data_repair({\"item\": recipes[0]}, {\"uni_quantity\": int(recipes[2])})
	$Control/OutputCraftSlot9.set_item(data[0], data[1])
	$Control/OutputCraftSlot9.installation_item()
	$Control/OutputCraftSlot9.item_connecting()

#Редактирует book_menu
func edit_book_menu(existing, anailable, selected):
	var book = $Control/book_menu/ItemList
	book.clear()
	for i in existing.values():
		var dat = [SD.get_node(\"ItemData\").get(str(i[0]))[\"name_in_game\"], \"res://Tecture/Modeli/no_texture.png\", false, \"Рецепт:\"]
		if i[1] >= 1:
			dat[0] += \" (\" + str(i[1] + 1) + \" вариант)\"
		if SD.get_node(\"ItemData\").get(str(i[0]))[\"animation\"].get(\"frames\") != null:
			dat[1] = SD.get_node(\"ItemData\").get(str(i[0]))[\"animation\"][\"frames\"][0]
		if i == [selected[0], selected[1]]:
			dat[2] = true
		
		book.add_item(dat[0], load(dat[1]), dat[2])
		var item = book.get_item_count() - 1
		
		var d = not i[0]+str(i[1]) in anailable.keys()
		book.set_item_disabled(item, d)
		
		#var id = 9
		#for p in range(3):
		#	dat[3] += \"\\n  \"
		#	for u in range(3):
		#		var slot = SD.get_node(\"ItemData\").get(str(i[0]))[\"slot\" + str((id - 9)*-1)]
		#		if slot.size() > i[1] and slot[i[1]].size() > 0:
		#			slot = slot[i[1]]
		#			dat[3] += SD.get_node(\"ItemData\").get(slot[1].get(\"item\")).get(\"name_in_game\")+\"(\"+str(slot[2].get(\"uni_quantity\").x)+\" шт.), \"
		#		else:
		#			dat[3] += \"ничего, \"
		#		id -= 1
		#dat[3] = dat[3].trim_suffix(\", \") + \".\"
		#dat[3] += \"\\n\\nПолучим \"+str(SD.get_node(\"ItemData\").get(str(i[0]))[\"quantity\"]) + \" шт.\"
		book.set_item_tooltip_enabled(item, false)
		#book.set_item_tooltip(item, \"\")

#Основное

func _ready():
	for i in range(9):
		var craft_slot = get_node(\"Control/CraftSlot\" + str(i))
		craft_slot.connect(\"LMB_item\", self, \"event\")
		craft_slot.connect(\"RMB_item\", self, \"event\")
	$Control/book_menu/ItemList.connect(\"item_selected\", self, \"recipes_selecte\")
	$Control/OutputCraftSlot9.connect(\"LMB_item\", self, \"lifted_item\")
	$Control/OutputCraftSlot9.connect(\"RMB_item\", self, \"lifted_item\")
	$Control/OutputCraftSlot9.connect(\"use_item\", self, \"lifted_item\")
	event(-1, -1, -1, -1, -1, -1)

func recipes_selecte(index):
	var selecte = existing_recipes[existing_recipes.keys()[index]]
	
	selected_recipes[0] = selecte[0]
	selected_recipes[1] = selecte[1]
	
	event(-1, -1, -1, -1, -1, -1)
	$Control/book_menu/ItemList.select(index)
	
	var f = recipes_make(selecte)
	G.get_node(\"Global Interface/Control/Description\").add_craft(f[0], f[1])

func recipes_make(sel):
	var da = []
	
	var item_data_item = SD.get_node(\"ItemData\").get(sel[0]).duplicate(true)
	
	var item_name = item_data_item[\"name_in_game\"]
	
	for i in range(9):
		var rec = item_data_item[\"slot\"+str(i)]
		if rec.size()-1 >= sel[1]:
			da.append(rec[sel[1]])
		else:
			da.append([{}, {}, {}])
	return [da, item_name]

func event(_slot, _significant, _insignificant, _hand_significant, _hand_insignificant, _mode):
	items_in_slots = get_all_slots()
	existing_recipes = learn_all_recipes()
	available_recipes = check_possibility_creating(existing_recipes, items_in_slots)
	printt(str(existing_recipes.size()), str(available_recipes.size()), str(selected_recipes))
	if selected_recipes.size() <= 0 or not (str(selected_recipes[0])+str(selected_recipes[1])) in available_recipes.keys():
		if available_recipes.size() > 0:
			selected_recipes[0] = available_recipes[available_recipes.keys()[0]][0]
			selected_recipes[1] = available_recipes[available_recipes.keys()[0]][1]
		else:
			selected_recipes = [\"\", -1]
	if selected_recipes[1] != -1:
		selected_recipes = find_available_quantity(selected_recipes, items_in_slots)
		add_item(selected_recipes)
	else:
		$Control/OutputCraftSlot9.significant_data = $Control/OutputCraftSlot9.default_significant_data
		$Control/OutputCraftSlot9.insignificant_data = $Control/OutputCraftSlot9.default_insignificant_data
	$Control/OutputCraftSlot9.installation_item()
	$Control/OutputCraftSlot9.item_connecting()
	
	edit_book_menu(existing_recipes, available_recipes, selected_recipes)

func lifted_item(slot, significant, insignificant, _hand_significant, _hand_insignificant, _mode): #забрали содержимое OutputCraftSlot9
	#Вычисляем значение которое нужно отнимать у слотов
	var ins = [insignificant.get(\"uni_quantity\"), SD.get_node(\"ItemData\").get(selected_recipes[0])]
	if ins[0] == null: ins[0] = 0
	if ins[1] == null: ins[1] = 0
	else: ins[1] = ins[1][\"quantity\"]
	if selected_recipes[2] - ins[0] <= 0: return
	var delete = round((selected_recipes[2] - ins[0])/ins[1]) #округлить((10 - 5)/5) = 1
	
	#Через цикл проходим по каждому слоту и отнимаем delete
	for i in range(9):
		if SD.get_node(\"ItemData\").get(selected_recipes[0]) != null and SD.get_node(\"ItemData\").get(selected_recipes[0])[\"slot\"+str(i)].size() > selected_recipes[1] and SD.get_node(\"ItemData\").get(selected_recipes[0])[\"slot\"+str(i)][selected_recipes[1]].size() > 0:
			var slot_del = get_node(\"Control/CraftSlot\" + str(i))
			#printt(\"Интерфейс крафта: Система удаления: \", SD.get_node(\"ItemData\").get(selected_recipes[0])[\"slot\"+str(i)][selected_recipes[1]][0].get(\"del_item\") in [null, true], slot_del.significant_data.hash() != slot_del.default_significant_data.hash())
			if SD.get_node(\"ItemData\").get(selected_recipes[0])[\"slot\"+str(i)][selected_recipes[1]][0].get(\"del_item\") in [null, true] and slot_del.significant_data.hash() != slot_del.default_significant_data.hash():
				var add_to_craft = SD.get_node(\"ItemData\").get(selected_recipes[0])
				if add_to_craft != null: 
					slot_del.insignificant_data = method_lifted_item(slot_del, delete, selected_recipes, i)
					if slot_del.insignificant_data[\"uni_quantity\"] <= 0:
						slot_del.insignificant_data = slot_del.default_insignificant_data
						slot_del.significant_data = slot_del.default_significant_data
					slot_del.installation_item()
					slot_del.item_connecting()
			elif SD.get_node(\"ItemData\").get(selected_recipes[0])[\"slot\"+str(i)][selected_recipes[1]][0].get(\"del_item\") == false:
				slot_del.emit_signal(\"item_not_deleted\", slot_del, selected_recipes)
	
	#Обновляем
	event(-1, -1, -1, -1, -1, -1)

func method_lifted_item(slot, number_delete, recipes, slot_number, data = []):
	#data = [данные в рецепте, данные в слоте]
	if data.size() <= 0:
		var add_to_craft = SD.get_node(\"ItemData\").get(selected_recipes[0])
		if add_to_craft != null: 
			add_to_craft = add_to_craft[\"slot\" + str(slot_number)]
			if add_to_craft.size() > recipes[1]: add_to_craft[recipes[1]]
		data.append(add_to_craft)
		data.append(slot.insignificant_data)
		if data[0].size() <= 0:
			return
		else:
			data[0] = data[0][0][2]
	
	#Рекурсивно отнимаем нужные значения
	#Переписать!!!
	for i in data[0].keys(): #Проходим по всем ключам рецепта
		if data[1].has(i): #Проверяем, имеет ли слот данный ключ
			if data[0][i] is Dictionary and data[1][i] is Dictionary: #Если словари, идём в рекурсию
				method_lifted_item(slot, number_delete, recipes, slot_number, data) #рекурсия
			elif data[0][i] is Vector2 and data[0][i].x != -1 and data[0][i].y == -1:
				if data[1][i] is int:
					data[1][i] -= int(data[0][i].x * number_delete)
				elif data[1][i] is float:
					data[1][i] -= float(data[0][i].x * number_delete)
	return data[1]
"

[sub_resource type="GDScript" id=86]
script/source = "extends Control

func _ready():
	$book_button/book/TextureButton.connect(\"toggled\", self, \"pressed\")

func pressed(mode):
	$book_menu.visible = mode
	if mode == true:
		$book_button/book/Sprite.texture = load(\"res://Texture/Other/Icons/book/book_open.png\")
	else:
		$book_button/book/Sprite.texture = load(\"res://Texture/Other/Icons/book/book_close.png\")
"

[sub_resource type="DynamicFont" id=9]
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=10]
default_font = SubResource( 9 )

[sub_resource type="StyleBoxFlat" id=12]
bg_color = Color( 0.105882, 0.227451, 0.141176, 1 )

[sub_resource type="GDScript" id=44]
script/source = "extends Control

onready var SD = get_node(\"/root/rootGame/Node/SettingData\")

var data_clothes = {
	\"armor\": 0.0,
	\"bullet\": [null, {}, {}],#1 значение это подходит ли пуля оружию, null если пушке она вообще не нужна
	\"gan\": [{}, {}],
}

func _ready():
	get_node(\"Control/HeadSlot\").connect(\"LMB_item\", self, \"event\")
	get_node(\"Control/HeadSlot\").connect(\"RMB_item\", self, \"event\")
	get_node(\"Control/TorsoSlot\").connect(\"LMB_item\", self, \"event\")
	get_node(\"Control/TorsoSlot\").connect(\"RMB_item\", self, \"event\")
	get_node(\"Control/LegsSlot\").connect(\"LMB_item\", self, \"event\")
	get_node(\"Control/LegsSlot\").connect(\"RMB_item\", self, \"event\")
	get_node(\"Control/MainArmSlot\").connect(\"LMB_item\", self, \"event\")
	get_node(\"Control/MainArmSlot\").connect(\"RMB_item\", self, \"event\")
	get_node(\"Control/AdditionalArmSlot\").connect(\"LMB_item\", self, \"event\")
	get_node(\"Control/AdditionalArmSlot\").connect(\"RMB_item\", self, \"event\")
	event(-1, -1, -1, -1, -1, -1)

func event(_slot, _significant, _insignificant, _hand_significant, _hand_insignificant, _mode):
	check_bullet_and_gan()
	armor_event()

#Считает общее количество защиты
func armor_event():
	data_clothes[\"armor\"] = 0.0
	var slots = [$Control/HeadSlot, $Control/LegsSlot, $Control/TorsoSlot]
	for i in slots:
		var name_ = str(get_node(\"Control/MainArmSlot\").significant_data.get(\"item\"))
		var num = SD.get_node(\"ItemData\").get(name_)
		if get_node(\"Control/MainArmSlot\").significant_data.get(\"item\") == null or num == null: num = null
		else: num = num.get(\"number\")
		
		if num is float or num is int:
			data_clothes[\"armor\"] += num

#По запросу забирает пулю из спец. слота
func take_away_the_bullet():
	if $Control/AdditionalArmSlot.significant_data != $Control/AdditionalArmSlot.default_significant_data:
		var q = $Control/AdditionalArmSlot.insignificant_data.get(\"uni_quantity\")
		if q is int:
			$Control/AdditionalArmSlot.insignificant_data[\"uni_quantity\"] -= 1
	var di = $Control/AdditionalArmSlot.insignificant_data.get(\"uni_quantity\")
	if di != null and di <= 0:
		$Control/AdditionalArmSlot.insignificant_data = $Control/AdditionalArmSlot.default_insignificant_data
		$Control/AdditionalArmSlot.significant_data = $Control/AdditionalArmSlot.default_significant_data
	$Control/AdditionalArmSlot.installation_item()
	$Control/AdditionalArmSlot.item_connecting()
	event(-1, -1, -1, -1, -1, -1)

#Проверяет соответствует ли пуля требованию пушки
#А так же заносит данные об пуле и пушке
func check_bullet_and_gan():
	data_clothes[\"gan\"] = [get_node(\"Control/MainArmSlot\").significant_data, get_node(\"Control/MainArmSlot\").insignificant_data]
	var check = null
	
	#Проверяем подходит ли пуля оружию
	var item = SD.get_node(\"ItemData\").get(str(get_node(\"Control/MainArmSlot\").significant_data.get(\"item\")))
	if get_node(\"Control/MainArmSlot\").significant_data.get(\"item\") == null: item = null
	
	if item != null:
		print(\"Интерфейс эгипировки: Требуется пуля: \"+str(item[\"bullets_needed\"]))
		check = get_node(\"Control/AdditionalArmSlot\").significant_data.get(\"item\") in item[\"bullets_needed\"]
		if item[\"bullets_needed\"].size() <= 0: 
			check = true
	
	print(\"Интерфейс эгипировки: Имеет ли дополнительный слот нужную пулю: \"+str(check))
	
	if check in [true, null] or $Control/MainArmSlot.significant_data.get(\"item\") == null:
		$Control/AdditionalArmSlot.settings_slot[\"hide_background\"] = true
		$Control/AdditionalArmSlot/Background.visible = false
	else:
		$Control/AdditionalArmSlot.settings_slot[\"hide_background\"] = false
		$Control/AdditionalArmSlot/Background.visible = true
	
	data_clothes[\"bullet\"] = [check, get_node(\"Control/AdditionalArmSlot\").significant_data, get_node(\"Control/AdditionalArmSlot\").insignificant_data]
"

[sub_resource type="DynamicFont" id=46]
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=47]
default_font = SubResource( 46 )

[sub_resource type="GDScript" id=62]
script/source = "extends Control

#Пример данных:
#[[{настройки слота(необязательно заполнять)}, {важные данные}, {неважные данные}], ...]

#Сундук взаимодействует с данными на прямую, дабы несколько игроков
#подключенных одновременно не получали десинхрон
var select_chest = []

func _ready():
	$EventCheck.connect(\"timeout\", self, \"check_chest_data\")
	$EventCheck.start()

#Подключает сундук к этой системе если это возможно
#Функции дисконект нету, т.к. просто нужно опустошить содержимое select_chest
func connect_chest(chest, name_var_data):
	select_chest = [chest, name_var_data]
	select_chest_buffer = [chest, name_var_data, chest.get(name_var_data)]#.duplicate(true)]
	set_slot_data(select_chest[0].get(select_chest[1]))

#Вызывается когда какой-то слот изменил своё состояние
#Изменяет параметры оригинальных данных
func event_chest(slot, _significant = -1, _insignificant = -1, _hand_significant = -1, _hand_insignificant = -1, _mode = -1):
	if select_chest != []:
		var id = slot.settings_slot[\"id_slot\"]
		var dat = [slot.settings_slot.duplicate(true), slot.significant_data, slot.insignificant_data]
		dat[0].erase(\"id_slot\")
		
		select_chest[0].slots(dat, id)
		#select_chest[0].get(select_chest[1])[id] = dat#.duplicate(true)

#По мимо 2 стандартных данных, содержит в себе ещё копию основных данных
var select_chest_buffer = []
#Вызывается раз в 0.1 секунды и проверяет синхронность данных
func check_chest_data():
	if select_chest.hash() != [].hash() and select_chest[0].get(select_chest[1]).hash() != select_chest_buffer[2].hash():
		set_slot_data(select_chest[0].get(select_chest[1]))
		select_chest_buffer = [select_chest[0], select_chest[1], select_chest[0].get(select_chest[1])]#.duplicate(true)]
	elif select_chest.size() > 0:
		for slot in $Control/ScrollContainer/GridContainer.get_children():
			var dat = select_chest[0].get(select_chest[1])[slot.settings_slot[\"id_slot\"]]
			if dat[1].hash() != slot.significant_data.hash() or dat[2].hash() != slot.insignificant_data.hash():
				var id = slot.settings_slot[\"id_slot\"]
				var datd = [slot.settings_slot.duplicate(true), slot.significant_data, slot.insignificant_data]
				datd[0].erase(\"id_slot\")
				
				select_chest_buffer[2][id] = datd
				
				event_chest(slot)

#Создаёт слоты
func set_slot_data(data):
	for i in $Control/ScrollContainer/GridContainer.get_children():
		i.queue_free()
	var id = 0
	print(data.size())
	for i in data:
		var slot = load(\"res://Scenes/Items/slot_item.res\").instance()
		for u in i[0].keys():
			slot.settings_slot[i[0][u]] = i[0][u]
		slot.significant_data = i[1]
		slot.insignificant_data = i[2]
		
		slot.settings_slot[\"id_slot\"] = id
		
		slot.rect_min_size = Vector2(70, 70)
		
		slot.name = \"ChestSlot\" + str(id)
		id += 1
		
		$Control/ScrollContainer/GridContainer.add_child(slot)
		
		slot.connect(\"LMB_item\", self, \"event_chest\")
		slot.connect(\"RMB_item\", self, \"event_chest\")
"

[sub_resource type="GDScript" id=58]
script/source = "extends Control

onready var SD = get_node(\"/root/rootGame/Node/SettingData\")

#Добавляет/уберает определённое количество предметов из инвентаря
func edit_items(significant, insignificant):
	if significant is String:
		var d = $Control/ScrollContainer/GridContainer/InventorySlot0.data_repair({\"item\": significant}, {\"uni_quantity\": insignificant})
		significant = d[0]
		insignificant = d[1]
	
	var nods = [
		$\"../main/HBoxContainer\",
		$Control/ScrollContainer/GridContainer,
		$\"../main/HBoxContainer\",
	]
	
	for l in round(nods.size()):
		for i in nods[l].get_children(): #i - слот
			if i.significant_data.hash() != i.default_significant_data.hash() and i.significant_data.get(\"item\") == significant[\"item\"]:
				if insignificant[\"uni_quantity\"] > 0:
					var g = i.add_item(significant, insignificant)
					
					if g[0] == true: 
						if g[2].has(\"uni_quantity\"):
							insignificant[\"uni_quantity\"] = clamp(g[2][\"uni_quantity\"], 0, 999999999)
						else:
							insignificant[\"uni_quantity\"] = 0
				elif insignificant[\"uni_quantity\"] < 0 and l > 0:
					#Объявляем сколько мы хотим отнять у слота
					var output_edit = i.insignificant_data.get(\"uni_quantity\")
					if not (output_edit is int): output_edit = 1
					
					#Если слот содержит меньше или столько же сколько нужно отнять
					if abs(insignificant[\"uni_quantity\"]) >= output_edit:
						insignificant[\"uni_quantity\"] += abs(i.insignificant_data[\"uni_quantity\"])
						
						#Обнуляем слот
						i.set_item(i.default_significant_data, i.default_insignificant_data)
					#Если слот содержит больше чем нужно отнять
					else:
						#Отнимаем у слота
						i.insignificant_data[\"uni_quantity\"] -= abs(insignificant[\"uni_quantity\"])
						
						#Отнимаем у запроса
						insignificant[\"uni_quantity\"] = 0
					
					insignificant[\"uni_quantity\"] = clamp(insignificant[\"uni_quantity\"], -999999999, 0)
					push_error(\"\")
			elif insignificant[\"uni_quantity\"] > 0 and i.significant_data.hash() == i.default_significant_data.hash() and l == 1:
				var g = i.add_item(significant, insignificant)
				
				if g[0] == true: 
					if g[2].has(\"uni_quantity\"):
						insignificant[\"uni_quantity\"] = clamp(g[2][\"uni_quantity\"], 0, 999999999)
					else:
						insignificant[\"uni_quantity\"] = 0
			
			i.installation_item()
			i.item_connecting()
			
			if insignificant[\"uni_quantity\"] == 0: break
	return [significant, insignificant]

#Возращает список с информацией об слотах
#Пример данных:
#[[{настройки слота}, {важные данные}, {неважные данные}], ...]
func get_items(inventory:bool = true, fast_slots:bool = true) -> Array:
	var items = []
	if inventory:
		for i in $Control/ScrollContainer/GridContainer.get_children():
			items.append([i.settings_slot, i.significant_data, i.insignificant_data])
	if fast_slots:
		for i in $\"../main/HBoxContainer\".get_children():
			items.append([i.settings_slot, i.significant_data, i.insignificant_data])
	return items
"

[sub_resource type="GDScript" id=161]
script/source = "extends Button


onready var player = $\"../../../../\"

func _pressed():
	player.show_main()
"

[sub_resource type="GDScript" id=59]
script/source = "extends Control

onready var SD = get_node(\"/root/rootGame/Node/SettingData\")

func _ready():
	$Control.show()
	$Saves.hide()
	$Wait.hide()
	
	$Control/ScrollContainer/VBoxContainer/Button.connect(\"pressed\", self, \"hide_menu\")
	$Control/ScrollContainer/VBoxContainer/Button2.connect(\"pressed\", self, \"net_off\")
	$Control/ScrollContainer/VBoxContainer/Button3.connect(\"pressed\", self, \"net_on\")
	$Control/ScrollContainer/VBoxContainer/Button4.connect(\"pressed\", self, \"anim_exit\")
	$Control/ScrollContainer/VBoxContainer/Button5.connect(\"pressed\", self, \"show_save\")
	if get_tree().network_peer == null:
		$Control/ScrollContainer/VBoxContainer/Button3.show()
		$Control/ScrollContainer/VBoxContainer/Button2.hide()
	else:
		$Control/ScrollContainer/VBoxContainer/Button3.hide()
		$Control/ScrollContainer/VBoxContainer/Button2.show()
	
	if SD.multiplayer_settings[\"open_server\"] == false: $Control/ScrollContainer/VBoxContainer/Button3.hide()
	if (get_tree().network_peer != null and SD.map_settings[\"can_be_saved\"] == false) or (SD.multiplayer_settings[\"save_server\"] == false and not get_tree().get_network_unique_id() in [0, 1]):
		$Control/ScrollContainer/VBoxContainer/Button5.hide()

func anim_exit():
	G.get_node(\"Load Screen\").select(\"res://Scenes/Menu.scn\", false)

func hide_menu():
	get_node(\"../../../../Player\").show_main()

func net_off():
	get_tree().network_peer = null
	$Control/ScrollContainer/VBoxContainer/Button2.hide()
	$Control/ScrollContainer/VBoxContainer/Button3.show()
	print(\"Меню персонажа: Сервер закрыт\")
	G.get_node(\"Global Interface\").new_notification(\"Мультиплеер\", \"Сервер закрыт.\")

func net_on():
	var peer = NetworkedMultiplayerENet.new()
	peer.create_server(G.game_settings[\"port\"], 15)
	get_tree().network_peer = peer
	print(peer)
	
	if get_tree().is_network_server() == true: 
		print(\"Меню персонажа: Сервер открыт\")
		G.get_node(\"Global Interface\").new_notification(\"Мультиплеер\", \"Сервер открыт. Порт: \"+str(G.game_settings[\"port\"]))
	$Control/ScrollContainer/VBoxContainer/Button2.show()
	$Control/ScrollContainer/VBoxContainer/Button3.hide()

func show_save():
	$Control.hide()
	$Saves.list()
	$Saves.show()
"

[sub_resource type="DynamicFont" id=51]
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=52]
default_font = SubResource( 51 )

[sub_resource type="DynamicFont" id=35]
size = 32
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=36]
default_font = SubResource( 35 )

[sub_resource type="GDScript" id=89]
script/source = "extends Control

#Основные

func _ready():
	$Button2.connect(\"pressed\", self, \"hide_saves\")
	$Button.connect(\"pressed\", self, \"add_element\")
	$ItemList.connect(\"item_selected\", self, \"event\")
	list()

func list():
	$ItemList.clear()
	var dir = Directory.new()
	if dir.open(\"user://SaveGame/Worlds\") == OK:
		dir.list_dir_begin()
		var file_name = dir.get_next()
		while file_name != \"\":
			var file = File.new()
			if file_name != \".\" and dir.current_is_dir() and file.file_exists(\"user://SaveGame/Worlds/\" + file_name + \"/map.huter\"):
				$ItemList.add_item(file_name)
				var id = $ItemList.get_item_count() - 1
				
				var image = Image.new()
				var err = image.load(\"user://SaveGame/Worlds/\" + file_name + \"/screenshot.png\")
				if err == OK:
					$ItemList.set_item_icon(id, ImageTexture.new().create_from_image(image, 0))
				else:
					$ItemList.set_item_icon(id, load(\"res://Tecture/Modeli/no_texture.png\"))
				
				if file.open(\"user://SaveGame/Worlds/\" + file_name + \"/data.json\", File.READ) == OK:
					file.open(\"user://SaveGame/Worlds/\" + file_name + \"/data.json\", File.READ)
					var data = str2var(file.get_as_text())
					file.close()
					$ItemList.set_item_tooltip(id, \"Версия игры: \" + data[0] + \"\\nДата создания: \" + str(data[2][\"day\"])+\".\"+str(data[2][\"month\"])+\".\"+str(data[2][\"year\"]) + \"\\nАвтор: \" + data[1])
				else:
					$ItemList.set_item_tooltip(id, \"Данные отцуцтвуют!\")
			file_name = dir.get_next()


#Вспомогательные

#Вызывается чтобы добавить новый элемент в список
func add_element():
	if $LineEdit.text != \"\":
		$\"../Wait\".modulate.a = 0
		$\"../Wait\".show()
		var tween = create_tween()
		tween.tween_property($\"../Wait\", \"modulate:a\", 1.0, 0.6)
		yield(tween, \"finished\")
		
		
		#hide_saves()
		$\"..\".hide()
		$\"../../main\".show()
		
		G.save_game($LineEdit.text)
		
		yield(get_tree(), \"idle_frame\")
		G.resave_screenshot($LineEdit.text)
		
		$\"../../main\".hide()
		$\"..\".show()
		#$\"..\".show_save()
		#tween = create_tween()
		#tween.tween_property($\"../Wait\", \"modulate:a\", 0.0, 0.6)
		#yield(tween, \"finished\")
		$\"../Wait\".hide()
		list()

#Если игрок выберет название из списка, оно продублируется в LineEdit
func event(id):
	$LineEdit.text = $ItemList.get_item_text(id)


#Мусор

func hide_saves():
	self.hide()
	$\"../Control\".show()
"

[sub_resource type="DynamicFont" id=91]
size = 20
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=92]
default_font = SubResource( 91 )

[sub_resource type="DynamicFont" id=88]
font_data = ExtResource( 25 )

[sub_resource type="StreamTexture" id=133]
flags = 4

[sub_resource type="DynamicFont" id=87]
font_data = ExtResource( 25 )

[sub_resource type="DynamicFont" id=90]
size = 13
font_data = ExtResource( 25 )

[sub_resource type="DynamicFont" id=176]
size = 40
font_data = ExtResource( 25 )

[sub_resource type="GDScript" id=79]
script/source = "extends Control

onready var PL = get_node(\"/root/rootGame/Node/Player\")

export var sampel = {
	\"Я говорю\":
	[
		\"Я отвечаю\",
		\"Имя собеседника\",
		\"Мне отвечают\",
		[], #Тут будут плюшки от ответа
		{
			\"Вариант ответа 1\": [\"Я отвечаю 2\",
				\"Имя собеседника\",
				\"Мне отвечают 2\",
				[],
				{\"Закончить беседу 2\": [[]]}], #Тут будут плюшки от ответа, конец диалога
			\"Закончить беседу\": [[]] #Тут будут плюшки от ответа, конец диалога
		}
	]
}

export var use = {}

func read_dialogue(dialogue = sampel): #Установить диалог
	if dialogue[dialogue.keys()[0]][0] != \"\":
		$Control/ReferenceRect2/Label.text = G.game_settings[\"player_name\"] + \": \"+dialogue[dialogue.keys()[0]][0]
		$Control/ReferenceRect2/Label.text += \"\\n\\n\"+dialogue[dialogue.keys()[0]][1]+\": \"+dialogue[dialogue.keys()[0]][2]
	else:
		$Control/ReferenceRect2/Label.text = dialogue[dialogue.keys()[0]][1]+\": \"+dialogue[dialogue.keys()[0]][2]
	use = dialogue
	if use[use.keys()[0]][3].size() > 0:
		for i in use[use.keys()[0]][3]:
			if i[1].size() <= 0:
				self.call(i[0])
			else:
				self.call(i[0], i[1])
	for i in $Control/Control/ScrollContainer/VBoxContainer.get_children():
		i.queue_free()
	for i in use[use.keys()[0]][4].keys():
		var button = Button.new()
		button.text = i
		button.rect_min_size.y = 30
		$Control/Control/ScrollContainer/VBoxContainer.add_child(button)
		button.connect(\"pressed\", self, \"event_pressed\")
	$Control/ReferenceRect2/Label.scroll_to_line($Control/ReferenceRect2/Label.get_line_count() - 1)

func event_pressed(): #Каждая нажатая кнопка будет вызывать её
	var id = -1
	for i in $Control/Control/ScrollContainer/VBoxContainer.get_children():
		id += 1
		if i.pressed == true:
			break
	
	use = {use[use.keys()[0]][4].keys()[id]: use[use.keys()[0]][4][use[use.keys()[0]][4].keys()[id]]}
	
	if use[use.keys()[0]].size() > 1:
		if use[use.keys()[0]][0] != \"\":
			$Control/ReferenceRect2/Label.text += \"\\n\\n\"+G.game_settings[\"player_name\"]+\": \"+use[use.keys()[0]][0]
		if use[use.keys()[0]][2] != \"\":
			$Control/ReferenceRect2/Label.text += \"\\n\\n\"+use[use.keys()[0]][1]+\": \"+use[use.keys()[0]][2]
		if use[use.keys()[0]][3].size() > 0:
			for i in use[use.keys()[0]][3]:
				if i[1].size() <= 0:
					self.call(i[0])
				else:
					self.call(i[0], i[1])
		for i in $Control/Control/ScrollContainer/VBoxContainer.get_children():
			i.queue_free()
		for i in use[use.keys()[0]][4].keys():
			var button = Button.new()
			button.text = i
			button.rect_min_size.y = 30
			$Control/Control/ScrollContainer/VBoxContainer.add_child(button)
			button.connect(\"pressed\", self, \"event_pressed\")
	else:
		if use[use.keys()[0]][0].size() > 0:
			for i in use[use.keys()[0]]:
				if i[1].size() <= 0:
					self.call(i[0])
				else:
					self.call(i[0], i[1])
		self.hide()
		PL.show_main()
	$Control/ReferenceRect2/Label.scroll_to_line($Control/ReferenceRect2/Label.get_line_count() - 1)


# \"Плюшки\" от ответов

func edit_items(item): #[item_name, number]
	$\"../inventory\".edit_items(item[0], item[1])


func damage_(data): #[lvl, gan, bullet]
	PL.damage(data[0], data[1], data[2])

func treatment(lvl):
	PL.effect_health(lvl)


func use_func(data): #[func_to_use, path, params]
	if get_node_or_null(data[1]) != null:
		if data.size() > 2:
			get_node(data[1]).call(data[0], data[2])
		else:
			get_node(data[1]).call(data[0])

func set_var(data): #[name_var, path, data]
	if get_node_or_null(data[1]) != null:
		get_node(data[1]).set(data[0], data[2])
"

[sub_resource type="DynamicFont" id=83]
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=84]
default_font = SubResource( 83 )

[sub_resource type="DynamicFont" id=81]
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=82]
default_font = SubResource( 81 )

[sub_resource type="GDScript" id=61]
script/source = "extends Control

onready var SD = get_node(\"/root/rootGame/Node/SettingData\")

func _ready():
	SD = get_node(\"/root/rootGame/Node/SettingData\")
	
	$Control/ScrollContainer/VBoxContainer/Button.connect(\"pressed\", self, \"anim_revive\")
	$Control/ScrollContainer/VBoxContainer/Button3.connect(\"pressed\", self, \"anim_specter\")
	$Control/ScrollContainer/VBoxContainer/Button2.connect(\"pressed\", self, \"anim_exit\")

func anim_exit():
	get_tree().network_peer = null
	G.get_node(\"Load Screen\").select(\"res://Scenes/Menu.scn\", false)
func ok_exit():
	get_tree().network_peer = null
	get_tree().change_scene(\"res://Scenes/Menu.scn\")

func died(cause):
	if SD.map_settings[\"specter\"] == true:
		$Control/ScrollContainer/VBoxContainer/Button3.show()
	else:
		$Control/ScrollContainer/VBoxContainer/Button3.hide()
	if SD.map_settings[\"revive\"] == true:
		$Control/ScrollContainer/VBoxContainer/Button.show()
	else:
		$Control/ScrollContainer/VBoxContainer/Button.hide()
	$Control/Label5.text = str(cause)

func anim_revive():
	$\"../Animation\".function = [\"../died\", \"ok_revive\"]
	$\"../Animation\".play_backwards(\"Transition\")
func ok_revive():
	get_node(\"/root/rootGame\").revive_player(G.my_id())
	get_node(\"/root/rootGame\").rpc(\"revive_player\", G.my_id())
	var died_text = \"Игрок \" + str(G.game_settings[\"player_name\"]) + \" вернулся к жизни.\"
	get_node(\"/root/rootGame\").sms(died_text)
	get_node(\"/root/rootGame\").rpc(\"sms\", died_text)

func anim_specter():
	$\"../Animation\".function = [\"../died\", \"ok_specter\"]
	$\"../Animation\".play_backwards(\"Transition\")
func ok_specter():
	get_node(\"/root/rootGame\").specter()
	var died_text = \"Игрок \" + str(G.game_settings[\"player_name\"]) + \" стал наблюдателем.\"
	get_node(\"/root/rootGame\").sms(died_text)
	get_node(\"/root/rootGame\").rpc(\"sms\", died_text)
"

[sub_resource type="DynamicFont" id=33]
size = 34
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=37]
default_font = SubResource( 33 )

[sub_resource type="DynamicFontData" id=78]
font_path = "res://19104.ttf"

[sub_resource type="DynamicFont" id=39]
size = 30
outline_size = 2
outline_color = Color( 0, 0, 0, 1 )
font_data = SubResource( 78 )

[sub_resource type="Theme" id=38]
default_font = SubResource( 39 )

[sub_resource type="DynamicFont" id=60]
size = 28
font_data = ExtResource( 25 )

[sub_resource type="GDScript" id=13]
script/source = "extends Control

func _ready():
	$Button.connect(\"pressed\", self, \"_pressed\")

func _pressed():
	if $LineEdit.text != \"\":
		var s = \"(Вы), \" + str(G.game_settings[\"player_name\"]) + \": \" + $LineEdit.text
		$ItemList.add_item(s)
		$\".\".rpc(\"sing\", G.game_settings[\"player_name\"], $LineEdit.text)
		$\"/root/rootGame\".rpc(\"sms\", $LineEdit.text, G.game_settings[\"player_name\"], false)
	$LineEdit.text = \"\"

remote func sing(name_p, text):
	if $\".\".visible == false and $\"../Control\".rect_position.y != 0:
		$\"../Control/AnimationPlayer\".play_backwards(\"def\")
	var s = str(name_p) + \": \" + str(text)
	$ItemList.add_item(s)
	
	G.get_node(\"Global Interface\").new_notification(\"Чат\", str(name_p) + \": \" + str(text))

remote func chat_event(sms):
	if $\".\".visible == false and $\"../Control\".rect_position.y != 0:
		$\"../Control/AnimationPlayer\".play_backwards(\"def\")
	var s = sms
	$ItemList.add_item(s)
	
	G.get_node(\"Global Interface\").new_notification(\"Система\", str(sms))
"

[sub_resource type="DynamicFont" id=63]
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=64]
default_font = SubResource( 63 )

[sub_resource type="DynamicFont" id=53]
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=54]
default_font = SubResource( 53 )

[sub_resource type="DynamicFont" id=55]
font_data = ExtResource( 25 )

[sub_resource type="Theme" id=56]
default_font = SubResource( 55 )

[sub_resource type="GDScript" id=163]
script/source = "extends Button


onready var player = $\"../../../../\"

func _pressed():
	player.hide_chat()
"

[sub_resource type="Animation" id=97]
length = 0.001

[sub_resource type="Animation" id=98]
resource_name = "Transition"
length = 2.0

[sub_resource type="GDScript" id=99]
script/source = "extends AnimationPlayer

var function = [\"\", \"\"] #путь, функция

func finished(_anim_name):
	if get_node_or_null(function[0]) != null and get_node(function[0]).has_method(function[1]):
		get_node(function[0]).call(function[1])
"

[node name="interface" type="CanvasLayer"]
script = SubResource( 76 )

[node name="Bottom" type="TextureRect" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 20 )
expand = true

[node name="blur" type="ColorRect" parent="."]
pause_mode = 1
material = SubResource( 137 )
use_parent_material = true
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0, 0, 0, 1 )
script = SubResource( 151 )
__meta__ = {
"_edit_lock_": true
}

[node name="main" type="Control" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
theme = SubResource( 94 )
script = SubResource( 57 )

[node name="heating" type="AnimatedSprite" parent="main"]
position = Vector2( 44.75, 47.875 )
scale = Vector2( 1.27857, 1.28214 )
frames = SubResource( 123 )
animation = "def"

[node name="health" type="AnimatedSprite" parent="main"]
position = Vector2( 46, 26 )
scale = Vector2( 1.3, 1.25 )
frames = SubResource( 116 )
animation = "def"

[node name="battery" type="AnimatedSprite" parent="main"]
position = Vector2( 26, 71 )
scale = Vector2( 1.3, 1.25 )
frames = SubResource( 132 )
animation = "def"

[node name="Control" type="Control" parent="main"]
anchor_left = 0.5
anchor_top = 1.0
anchor_right = 0.5
anchor_bottom = 1.0
margin_top = -64.0

[node name="TouchScreenButton" type="TouchScreenButton" parent="main/Control"]
position = Vector2( -220, -10 )
shape = SubResource( 171 )

[node name="HBoxContainer" type="HBoxContainer" parent="main"]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -64.0
alignment = 1

[node name="MainSlot" parent="main/HBoxContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 310.0
margin_right = 374.0
margin_bottom = 64.0
rect_min_size = Vector2( 64, 0 )

[node name="MainSlot2" parent="main/HBoxContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 378.0
margin_right = 442.0
margin_bottom = 64.0
rect_min_size = Vector2( 64, 0 )

[node name="MainSlot3" parent="main/HBoxContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 446.0
margin_right = 510.0
margin_bottom = 64.0
rect_min_size = Vector2( 64, 0 )

[node name="MainSlot4" parent="main/HBoxContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 514.0
margin_right = 578.0
margin_bottom = 64.0
rect_min_size = Vector2( 64, 0 )

[node name="MainSlot5" parent="main/HBoxContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 582.0
margin_right = 646.0
margin_bottom = 64.0
rect_min_size = Vector2( 64, 0 )

[node name="MainSlot6" parent="main/HBoxContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 650.0
margin_right = 714.0
margin_bottom = 64.0
rect_min_size = Vector2( 64, 0 )

[node name="Box" type="HBoxContainer" parent="main"]
margin_left = 95.0
margin_top = 3.0
margin_right = 325.0
margin_bottom = 83.0

[node name="LowHealth" type="Control" parent="main/Box"]
margin_right = 80.0
margin_bottom = 80.0
rect_min_size = Vector2( 80, 0 )
hint_tooltip = "Восстановите здоровье!"

[node name="Icon" type="AnimatedSprite" parent="main/Box/LowHealth"]
position = Vector2( 37, 36 )
scale = Vector2( 2, 2 )
frames = SubResource( 150 )
animation = "gear"
frame = 3
playing = true

[node name="LowBat" type="Control" parent="main/Box"]
margin_left = 84.0
margin_right = 164.0
margin_bottom = 80.0
rect_min_size = Vector2( 80, 0 )
hint_tooltip = "Восстановите батарею!"

[node name="Icon" type="AnimatedSprite" parent="main/Box/LowBat"]
position = Vector2( 37, 36 )
scale = Vector2( 2, 2 )
frames = SubResource( 150 )
animation = "bat"
playing = true

[node name="HighTemp" type="Control" parent="main/Box"]
margin_left = 168.0
margin_right = 248.0
margin_bottom = 80.0
rect_min_size = Vector2( 80, 0 )
hint_tooltip = "Снизьте температуру!"

[node name="Icon" type="AnimatedSprite" parent="main/Box/HighTemp"]
position = Vector2( 37, 36 )
scale = Vector2( 2, 2 )
frames = SubResource( 150 )
animation = "temp"
playing = true

[node name="Shoot" type="TextureRect" parent="main"]
self_modulate = Color( 0.101961, 0.682353, 0, 0.635294 )
anchor_left = 1.0
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -224.0
margin_top = -187.0
margin_right = -54.0
margin_bottom = -20.0
texture = ExtResource( 3 )
expand = true
script = SubResource( 153 )

[node name="Back" type="TextureRect" parent="main/Shoot"]
modulate = Color( 0.101961, 0.682353, 0, 0.635294 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -55.0
margin_top = -55.0
margin_right = 55.0
margin_bottom = 55.0
rect_pivot_offset = Vector2( 20, 20 )
texture = ExtResource( 3 )
expand = true

[node name="Sword01" type="Sprite" parent="main/Shoot"]
modulate = Color( 0.411765, 1, 0.32549, 1 )
position = Vector2( 80, 86 )
scale = Vector2( 2.5, 2.5 )
texture = ExtResource( 1 )

[node name="Sword02" type="Sprite" parent="main/Shoot"]
modulate = Color( 0.411765, 1, 0.32549, 1 )
position = Vector2( 92, 86 )
scale = Vector2( 2.5, 2.5 )
texture = ExtResource( 1 )
flip_h = true

[node name="Rot" type="Node2D" parent="main/Shoot"]
position = Vector2( 85, 83.5 )

[node name="Rect" type="TextureRect" parent="main/Shoot/Rot"]
modulate = Color( 0.219608, 1, 0, 0.901961 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -20.0
margin_top = -20.0
margin_right = 20.0
margin_bottom = 20.0
rect_pivot_offset = Vector2( 20, 20 )
texture = ExtResource( 3 )
expand = true

[node name="Touch" type="TouchScreenButton" parent="main/Shoot"]
position = Vector2( -15, -18 )
shape = SubResource( 168 )

[node name="AndroidButtons" type="HBoxContainer" parent="main"]
anchor_left = 1.0
anchor_right = 1.0
margin_left = -1024.0
margin_top = 10.0
margin_right = -10.0
margin_bottom = 100.0
theme = SubResource( 158 )
alignment = 2

[node name="Frame2" type="TouchScreenButton" parent="main/AndroidButtons"]
position = Vector2( 531, -11 )
scale = Vector2( 2.5, 2.5 )
shape = SubResource( 173 )

[node name="UseAll" type="Button" parent="main/AndroidButtons"]
margin_left = 349.0
margin_right = 544.0
margin_bottom = 90.0
rect_min_size = Vector2( 195, 0 )
focus_mode = 0
custom_fonts/font = SubResource( 184 )
enabled_focus_mode = 0
text = "Использовать"
icon_align = 1
expand_icon = true
script = SubResource( 185 )

[node name="Drop" type="Button" parent="main/AndroidButtons"]
margin_left = 548.0
margin_right = 638.0
margin_bottom = 90.0
rect_min_size = Vector2( 90, 0 )
focus_mode = 0
enabled_focus_mode = 0
icon = SubResource( 183 )
icon_align = 1
expand_icon = true
script = SubResource( 164 )

[node name="Use" type="Button" parent="main/AndroidButtons"]
margin_left = 642.0
margin_right = 732.0
margin_bottom = 90.0
rect_min_size = Vector2( 90, 0 )
focus_mode = 0
toggle_mode = true
enabled_focus_mode = 0
icon = ExtResource( 9 )
icon_align = 1
expand_icon = true
script = SubResource( 165 )

[node name="InventoryOpen" type="Button" parent="main/AndroidButtons"]
margin_left = 736.0
margin_right = 826.0
margin_bottom = 90.0
rect_min_size = Vector2( 90, 0 )
focus_mode = 0
enabled_focus_mode = 0
icon = ExtResource( 4 )
icon_align = 1
expand_icon = true
script = SubResource( 159 )

[node name="Chat" type="Button" parent="main/AndroidButtons"]
margin_left = 830.0
margin_right = 920.0
margin_bottom = 90.0
rect_min_size = Vector2( 90, 0 )
focus_mode = 0
enabled_focus_mode = 0
icon = ExtResource( 5 )
icon_align = 1
expand_icon = true
script = SubResource( 162 )

[node name="Close" type="Button" parent="main/AndroidButtons"]
margin_left = 924.0
margin_right = 1014.0
margin_bottom = 90.0
rect_min_size = Vector2( 90, 0 )
focus_mode = 0
enabled_focus_mode = 0
icon = ExtResource( 17 )
icon_align = 1
expand_icon = true
script = SubResource( 160 )

[node name="RunButtons" type="HBoxContainer" parent="main"]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 35.0
margin_top = -135.0
margin_right = 284.0
margin_bottom = -35.0
rect_min_size = Vector2( 0, 100 )
alignment = 1
script = SubResource( 166 )

[node name="Left" type="Button" parent="main/RunButtons"]
visible = false
margin_left = 74.0
margin_right = 174.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 0 )
focus_mode = 0
enabled_focus_mode = 0
text = "<-"

[node name="Right" type="Button" parent="main/RunButtons"]
visible = false
margin_left = 126.0
margin_right = 226.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 0 )
focus_mode = 0
enabled_focus_mode = 0
text = "->"

[node name="TouchLeft" type="TouchScreenButton" parent="main/RunButtons"]
position = Vector2( 22, 0 )
scale = Vector2( 5, 5 )
normal = SubResource( 177 )
pressed = SubResource( 178 )
shape = SubResource( 169 )

[node name="None" type="TouchScreenButton" parent="main/RunButtons"]
position = Vector2( -83, -30 )
scale = Vector2( 2.5, 2.5 )
shape = SubResource( 174 )

[node name="TouchRight" type="TouchScreenButton" parent="main/RunButtons"]
position = Vector2( 226, 100 )
rotation = 3.14159
scale = Vector2( 5, 5 )
normal = SubResource( 177 )
pressed = SubResource( 178 )
shape = SubResource( 169 )

[node name="TouchUp" type="TouchScreenButton" parent="main/RunButtons"]
position = Vector2( 10, -292 )
scale = Vector2( 5, 5 )
normal = SubResource( 179 )
pressed = SubResource( 180 )
shape = SubResource( 172 )

[node name="TouchDown2" type="TouchScreenButton" parent="main/RunButtons"]
position = Vector2( 10, -188 )
scale = Vector2( 5, 5 )
normal = SubResource( 181 )
pressed = SubResource( 182 )
shape = SubResource( 170 )

[node name="JumpButtons" type="VBoxContainer" parent="main"]
anchor_left = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -100.0
margin_top = 173.0
margin_bottom = -223.0
rect_min_size = Vector2( 100, 0 )
alignment = 1
script = SubResource( 167 )

[node name="Up" type="Button" parent="main/JumpButtons"]
visible = false
margin_top = 52.0
margin_right = 100.0
margin_bottom = 152.0
rect_min_size = Vector2( 0, 100 )
focus_mode = 0
enabled_focus_mode = 0
text = "UP"

[node name="Down" type="Button" parent="main/JumpButtons"]
visible = false
margin_top = 104.0
margin_right = 100.0
margin_bottom = 204.0
rect_min_size = Vector2( 100, 100 )
focus_mode = 0
enabled_focus_mode = 0
text = "DOWN"

[node name="TouchUp" type="TouchScreenButton" parent="main/JumpButtons"]
position = Vector2( -10, 0 )
scale = Vector2( 5, 5 )
normal = SubResource( 179 )
pressed = SubResource( 180 )
shape = SubResource( 172 )

[node name="TouchDown" type="TouchScreenButton" parent="main/JumpButtons"]
position = Vector2( -10, 104 )
scale = Vector2( 5, 5 )
normal = SubResource( 181 )
pressed = SubResource( 182 )
shape = SubResource( 170 )

[node name="Frame" type="TouchScreenButton" parent="main/JumpButtons"]
position = Vector2( 50, 104 )
scale = Vector2( 2.5, 2.5 )
shape = SubResource( 175 )
shape_centered = false

[node name="health" type="ColorRect" parent="."]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
color = Color( 0.227451, 0, 0, 0 )
script = SubResource( 186 )
__meta__ = {
"_edit_lock_": true
}

[node name="craft_menu" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = SubResource( 85 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Control" type="Control" parent="craft_menu"]
margin_left = 584.0
margin_top = 12.0
margin_right = 970.0
margin_bottom = 421.0
script = SubResource( 86 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="book_menu" type="Control" parent="craft_menu/Control"]
margin_left = 247.0
margin_top = 64.0
margin_right = 431.0
margin_bottom = 396.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ColorRect2" type="ColorRect" parent="craft_menu/Control/book_menu"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.105882, 0.227451, 0.141176, 1 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ReferenceRect" type="ReferenceRect" parent="craft_menu/Control/book_menu"]
anchor_right = 1.0
anchor_bottom = 1.0
border_color = Color( 0.109804, 0.196078, 0.113725, 1 )
editor_only = false
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ItemList" type="ItemList" parent="craft_menu/Control/book_menu"]
anchor_right = 1.0
anchor_bottom = 1.0
theme = SubResource( 10 )
custom_styles/bg = SubResource( 12 )
items = [ "Элемент 0", null, false, "Элемент 1", null, false, "Элемент 2", null, false, "Элемент 3", null, false, "Элемент 4", null, false, "Элемент 5", null, false ]

[node name="ColorRect" type="ColorRect" parent="craft_menu/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -139.0
color = Color( 0.105882, 0.227451, 0.141176, 1 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="book_button" type="Control" parent="craft_menu/Control"]
margin_left = 247.0
margin_top = 14.1926
margin_right = 294.0
margin_bottom = 62.1926
__meta__ = {
"_edit_group_": true,
"_edit_use_anchors_": false
}

[node name="ColorRect3" type="ColorRect" parent="craft_menu/Control/book_button"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.105882, 0.227451, 0.141176, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ReferenceRect3" type="ReferenceRect" parent="craft_menu/Control/book_button"]
anchor_right = 1.0
anchor_bottom = 1.0
border_color = Color( 0.109804, 0.196078, 0.113725, 1 )
editor_only = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="book" type="Control" parent="craft_menu/Control/book_button"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -25.0
margin_top = -22.0
margin_right = 25.0
margin_bottom = 22.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Sprite" type="TextureRect" parent="craft_menu/Control/book_button/book"]
margin_left = 2.0
margin_right = 48.0
margin_bottom = 43.0
texture = ExtResource( 8 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureButton" type="TextureButton" parent="craft_menu/Control/book_button/book"]
margin_left = 3.0
margin_right = 47.0
margin_bottom = 44.0
toggle_mode = true
pressed = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ReferenceRect2" type="ReferenceRect" parent="craft_menu/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -139.0
border_color = Color( 0.109804, 0.196078, 0.113725, 1 )
editor_only = false
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="CraftSlot0" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 8.0
margin_top = 11.0
margin_right = 56.752
margin_bottom = 38.147
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="CraftSlot1" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 86.0
margin_top = 11.0
margin_right = 134.752
margin_bottom = 38.147
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="CraftSlot2" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 164.0
margin_top = 11.0
margin_right = 212.752
margin_bottom = 38.147
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="CraftSlot3" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 8.0
margin_top = 88.0
margin_right = 56.752
margin_bottom = 115.147
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="CraftSlot4" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 86.0
margin_top = 88.0
margin_right = 134.752
margin_bottom = 115.147
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="CraftSlot5" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 164.0
margin_top = 88.0
margin_right = 212.752
margin_bottom = 115.147
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="CraftSlot6" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 8.0
margin_top = 164.0
margin_right = 56.752
margin_bottom = 191.147
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="CraftSlot7" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 86.0
margin_top = 164.0
margin_right = 134.752
margin_bottom = 191.147
rect_pivot_offset = Vector2( 102, -84 )
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="CraftSlot8" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 164.0
margin_top = 163.0
margin_right = 212.752
margin_bottom = 190.147
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="arrow" type="TextureRect" parent="craft_menu/Control"]
margin_left = 88.0
margin_top = 245.0
margin_right = 164.0
margin_bottom = 321.0
texture = ExtResource( 13 )
expand = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="OutputCraftSlot9" parent="craft_menu/Control" instance=ExtResource( 22 )]
margin_left = 89.0
margin_top = 324.0
margin_right = 137.752
margin_bottom = 351.147
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": false,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="clothes" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
rect_pivot_offset = Vector2( -258.041, 161.425 )
mouse_filter = 2
script = SubResource( 44 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Control" type="Control" parent="clothes"]
margin_left = 305.0
margin_top = 288.0
margin_right = 542.0
margin_bottom = 585.0
theme = SubResource( 47 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="clothes/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.105882, 0.227451, 0.141176, 1 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ReferenceRect" type="ReferenceRect" parent="clothes/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
border_color = Color( 0.109804, 0.196078, 0.113725, 1 )
editor_only = false
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ColorRect2" type="ColorRect" parent="clothes/Control"]
visible = false
margin_left = 86.4705
margin_top = 20.2097
margin_right = 225.47
margin_bottom = 270.21
color = Color( 0.760784, 0.760784, 0.760784, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="clothes/Control"]
margin_left = 49.0
margin_top = 20.0
margin_right = 203.0
margin_bottom = 270.0
texture = ExtResource( 18 )
expand = true
flip_h = true
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HeadSlot" parent="clothes/Control" instance=ExtResource( 22 )]
margin_left = 89.0
margin_top = 51.0
margin_right = 152.884
margin_bottom = 96.251
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": 1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [ "protection" ]
}

[node name="TorsoSlot" parent="clothes/Control" instance=ExtResource( 22 )]
margin_left = 98.0
margin_top = 149.0
margin_right = 141.884
margin_bottom = 174.251
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": 1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [ "protection" ]
}

[node name="LegsSlot" parent="clothes/Control" instance=ExtResource( 22 )]
margin_left = 100.0
margin_top = 223.0
margin_right = 143.884
margin_bottom = 248.251
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": 1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [ "protection" ]
}

[node name="MainArmSlot" parent="clothes/Control" instance=ExtResource( 22 )]
margin_left = 35.0
margin_top = 176.0
margin_right = 78.884
margin_bottom = 201.251
default_significant_data = {
"item": "arm"
}
default_insignificant_data = {
"uni_quantity": 1
}
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": 1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [ "weapon", "sword" ]
}

[node name="AdditionalArmSlot" parent="clothes/Control" instance=ExtResource( 22 )]
margin_left = 164.0
margin_top = 192.0
margin_right = 207.884
margin_bottom = 217.251
default_significant_data = {
"animation": {
"event": 1,
"frames": [ "res://textures/ui/items/bullet_here.png" ]
},
"description": "Вставте сюда нужную пулю если слот красный.",
"item": "sampel_bullet"
}
default_insignificant_data = {
"uni_quantity": 1
}
settings_slot = {
"hide_background": true,
"hide_health": false,
"hide_quantity": false,
"hide_scope": false,
"multiplayer_synchronization": false,
"permission_to_use": false,
"put_items": true,
"slot_capacity": -1,
"slot_off": false,
"take_items": true,
"texture_flip_h": false,
"texture_flip_v": false,
"valid_types": [  ]
}

[node name="chest" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = SubResource( 62 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Control" type="Control" parent="chest"]
margin_left = 554.0
margin_top = 433.0
margin_right = 924.0
margin_bottom = 595.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="chest/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.309804, 0.309804, 0.309804, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ReferenceRect" type="ReferenceRect" parent="chest/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
border_color = Color( 0.137255, 0.137255, 0.137255, 1 )
editor_only = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="chest/Control"]
margin_left = 2.0
margin_top = 2.0
margin_right = 384.0
margin_bottom = 160.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GridContainer" type="GridContainer" parent="chest/Control/ScrollContainer"]
columns = 5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="EventCheck" type="Timer" parent="chest"]
wait_time = 0.1

[node name="inventory" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
script = SubResource( 58 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Control" type="Control" parent="inventory"]
margin_left = 30.0
margin_top = 33.0
margin_right = 252.0
margin_bottom = 442.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="inventory/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.105882, 0.227451, 0.141176, 1 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ReferenceRect" type="ReferenceRect" parent="inventory/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
border_color = Color( 0.109804, 0.196078, 0.113725, 1 )
editor_only = false
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="inventory/Control"]
margin_left = 2.0
margin_top = 1.0
margin_right = 236.0
margin_bottom = 407.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="GridContainer" type="GridContainer" parent="inventory/Control/ScrollContainer"]
margin_right = 219.0
margin_bottom = 440.0
rect_min_size = Vector2( 219, 405 )
columns = 3

[node name="InventorySlot0" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_right = 70.0
margin_bottom = 70.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot1" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 74.0
margin_right = 144.0
margin_bottom = 70.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot2" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 148.0
margin_right = 218.0
margin_bottom = 70.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot3" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 74.0
margin_right = 70.0
margin_bottom = 144.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot4" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 74.0
margin_top = 74.0
margin_right = 144.0
margin_bottom = 144.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot5" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 148.0
margin_top = 74.0
margin_right = 218.0
margin_bottom = 144.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot6" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 148.0
margin_right = 70.0
margin_bottom = 218.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot7" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 74.0
margin_top = 148.0
margin_right = 144.0
margin_bottom = 218.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot8" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 148.0
margin_top = 148.0
margin_right = 218.0
margin_bottom = 218.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot9" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 222.0
margin_right = 70.0
margin_bottom = 292.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot10" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 74.0
margin_top = 222.0
margin_right = 144.0
margin_bottom = 292.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot11" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 148.0
margin_top = 222.0
margin_right = 218.0
margin_bottom = 292.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot12" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 296.0
margin_right = 70.0
margin_bottom = 366.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot13" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 74.0
margin_top = 296.0
margin_right = 144.0
margin_bottom = 366.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot14" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 148.0
margin_top = 296.0
margin_right = 218.0
margin_bottom = 366.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot15" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_top = 370.0
margin_right = 70.0
margin_bottom = 440.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot16" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 74.0
margin_top = 370.0
margin_right = 144.0
margin_bottom = 440.0
rect_min_size = Vector2( 70, 70 )

[node name="InventorySlot17" parent="inventory/Control/ScrollContainer/GridContainer" instance=ExtResource( 22 )]
anchor_right = 0.0
anchor_bottom = 0.0
margin_left = 148.0
margin_top = 370.0
margin_right = 218.0
margin_bottom = 440.0
rect_min_size = Vector2( 70, 70 )

[node name="InventoryOpen" type="Button" parent="inventory"]
margin_left = 305.0
margin_top = 33.0
margin_right = 395.0
margin_bottom = 123.0
rect_min_size = Vector2( 90, 0 )
focus_mode = 0
theme = SubResource( 158 )
enabled_focus_mode = 0
icon = ExtResource( 4 )
icon_align = 1
expand_icon = true
script = SubResource( 161 )

[node name="MoveItem" parent="." instance=ExtResource( 23 )]

[node name="menu" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 0.23597
margin_right = 0.235962
mouse_filter = 2
theme = ExtResource( 21 )
script = SubResource( 59 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="menu"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 0.462745 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Control" type="Control" parent="menu"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -103.5
margin_top = -125.5
margin_right = 103.5
margin_bottom = 125.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="menu/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_bottom = -59.0
color = Color( 0.105882, 0.227451, 0.141176, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="menu/Control"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -100.5
margin_top = -78.5
margin_right = 100.5
margin_bottom = 58.5
rect_min_size = Vector2( 197, 140 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="menu/Control/ScrollContainer"]
margin_right = 197.0
margin_bottom = 166.0
rect_min_size = Vector2( 197, 140 )
rect_pivot_offset = Vector2( 536.869, 82.9661 )

[node name="Button" type="Button" parent="menu/Control/ScrollContainer/VBoxContainer"]
margin_right = 197.0
margin_bottom = 30.0
rect_min_size = Vector2( 197, 30 )
theme = SubResource( 52 )
text = "Продолжить"

[node name="Button2" type="Button" parent="menu/Control/ScrollContainer/VBoxContainer"]
margin_top = 34.0
margin_right = 197.0
margin_bottom = 64.0
rect_min_size = Vector2( 197, 30 )
theme = SubResource( 52 )
text = "Закрыть мультиплеер"

[node name="Button3" type="Button" parent="menu/Control/ScrollContainer/VBoxContainer"]
margin_top = 68.0
margin_right = 197.0
margin_bottom = 98.0
rect_min_size = Vector2( 197, 30 )
theme = SubResource( 52 )
text = "Открыть мультиплеер"

[node name="Button5" type="Button" parent="menu/Control/ScrollContainer/VBoxContainer"]
margin_top = 102.0
margin_right = 197.0
margin_bottom = 132.0
rect_min_size = Vector2( 197, 30 )
hint_tooltip = "Чтобы сделать быстрое сохранение - нажмите F5"
theme = SubResource( 52 )
text = "Сохранения"

[node name="Button4" type="Button" parent="menu/Control/ScrollContainer/VBoxContainer"]
margin_top = 136.0
margin_right = 197.0
margin_bottom = 166.0
rect_min_size = Vector2( 197, 30 )
theme = SubResource( 52 )
text = "Выйти в меню"

[node name="Label" type="Label" parent="menu/Control"]
margin_right = 206.0
margin_bottom = 43.0
theme = SubResource( 36 )
text = "Меню:"
align = 1
valign = 1

[node name="Saves" type="Control" parent="menu"]
visible = false
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -103.5
margin_top = -125.5
margin_right = 103.5
margin_bottom = 125.5
script = SubResource( 89 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="menu/Saves"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_bottom = -59.0
color = Color( 0.105882, 0.227451, 0.141176, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect2" type="ColorRect" parent="menu/Saves"]
anchor_top = 1.0
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = -24.0
margin_top = -49.0
margin_right = 38.0
margin_bottom = -14.0
color = Color( 0.105882, 0.227451, 0.141176, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="menu/Saves"]
margin_right = 206.0
margin_bottom = 43.0
theme = SubResource( 36 )
text = "Сохранения"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ItemList" type="ItemList" parent="menu/Saves"]
margin_left = 2.0
margin_top = 42.0
margin_right = 205.0
margin_bottom = 191.0
theme = SubResource( 92 )
custom_fonts/font = SubResource( 88 )
items = [ "Быстрое сохранение", SubResource( 133 ), false ]
icon_mode = 0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button" type="Button" parent="menu/Saves"]
margin_left = -20.736
margin_top = 206.5
margin_right = 81.264
margin_bottom = 232.5
custom_fonts/font = SubResource( 87 )
text = "Сохранить"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button2" type="Button" parent="menu/Saves"]
margin_left = 158.264
margin_top = 206.5
margin_right = 241.264
margin_bottom = 232.5
custom_fonts/font = SubResource( 87 )
text = "Назад"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LineEdit" type="LineEdit" parent="menu/Saves"]
margin_left = 86.264
margin_top = 206.5
margin_right = 154.264
margin_bottom = 233.5
custom_fonts/font = SubResource( 90 )
placeholder_text = "Имя..."
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Wait" type="Control" parent="menu"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0

[node name="ColorRect" type="ColorRect" parent="menu/Wait"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 1 )

[node name="Label" type="Label" parent="menu/Wait"]
anchor_right = 1.0
anchor_bottom = 1.0
custom_fonts/font = SubResource( 176 )
text = "Сохранение может занять некоторое время.
Если игра не отвечает - это еще не значит
что она не работает!"
align = 1
valign = 1

[node name="dialogue" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
theme = ExtResource( 21 )
script = SubResource( 79 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Control" type="Control" parent="dialogue"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -478.0
margin_top = -268.5
margin_right = 478.0
margin_bottom = 268.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="dialogue/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.105882, 0.227451, 0.141176, 0.796078 )
__meta__ = {
"_edit_lock_": true
}

[node name="ReferenceRect" type="ReferenceRect" parent="dialogue/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = -0.177567
margin_bottom = -0.177551
border_color = Color( 0.109804, 0.196078, 0.113725, 1 )
editor_only = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Control" type="Control" parent="dialogue/Control"]
margin_left = 648.0
margin_top = 199.0
margin_right = 944.0
margin_bottom = 526.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="dialogue/Control/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.105882, 0.227451, 0.141176, 0.541176 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="dialogue/Control/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -1.0
scroll_horizontal_enabled = false

[node name="VBoxContainer" type="VBoxContainer" parent="dialogue/Control/Control/ScrollContainer"]
margin_right = 295.0
margin_bottom = 327.0
rect_min_size = Vector2( 295, 327 )
theme = SubResource( 84 )

[node name="Button" type="Button" parent="dialogue/Control/Control/ScrollContainer/VBoxContainer"]
margin_right = 295.0
margin_bottom = 30.0
rect_min_size = Vector2( 0, 30 )
text = "Привет! Как дела?"

[node name="Button2" type="Button" parent="dialogue/Control/Control/ScrollContainer/VBoxContainer"]
margin_top = 34.0
margin_right = 295.0
margin_bottom = 54.0
text = "Здравствуйте!"

[node name="ReferenceRect2" type="ReferenceRect" parent="dialogue/Control/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
border_color = Color( 0.109804, 0.196078, 0.113725, 1 )
editor_only = false
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ReferenceRect2" type="ReferenceRect" parent="dialogue/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 12.0
margin_top = 7.0
margin_right = -315.0
margin_bottom = -11.0
border_color = Color( 0.109804, 0.196078, 0.113725, 1 )
editor_only = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="dialogue/Control/ReferenceRect2"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.105882, 0.227451, 0.141176, 0.482353 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Label" type="RichTextLabel" parent="dialogue/Control/ReferenceRect2"]
margin_left = 2.0
margin_right = 622.0
margin_bottom = 514.0
rect_min_size = Vector2( 213, 133 )
theme = SubResource( 82 )
text = "Pandaren: аывпаывпа ывпаыпав вач икыуммс ии 5мрч  4 5р ы4кы ч ер екр орпрпр прпрпр прпрп рпрпрпрпрпр прп рпрпрпрпр прпрп рпр прпрпрп рпрпр пр прпрпрп рпрпрпрпрпр прпрпрпрпрпр прп рпрпрпрп прр рррррр рррррр ррррррр ррррррррр рррррр рррр"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="died" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
theme = ExtResource( 21 )
script = SubResource( 61 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="died"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0, 0, 0, 0.662745 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Control" type="Control" parent="died"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -121.5
margin_top = -143.0
margin_right = 121.5
margin_bottom = 143.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="png-clipart-russian-orthodox-church-russian-orthodox-cross-eastern-orthodox-church-christian-cross-eastern-christianity-christian-cross-christianity-cross-removebg-preview (1)" type="Sprite" parent="died/Control"]
visible = false
position = Vector2( 224.958, -57.4143 )
rotation = 0.303862
scale = Vector2( 0.389289, 0.365297 )

[node name="Label" type="Label" parent="died/Control"]
margin_left = 2.5
margin_top = -33.0
margin_right = 233.5
margin_bottom = 9.0
theme = SubResource( 37 )
text = "Уничтожен..."
align = 1
valign = 1

[node name="ColorRect" type="ColorRect" parent="died/Control"]
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.105882, 0.227451, 0.141176, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Label5" type="Label" parent="died/Control"]
margin_left = 18.5
margin_top = 46.0
margin_right = 187.5
margin_bottom = 88.0
theme = SubResource( 37 )
text = "Убийство"
align = 1
valign = 1

[node name="Label4" type="Label" parent="died/Control"]
margin_left = 13.5
margin_top = 16.0
margin_right = 152.5
margin_bottom = 46.0
theme = SubResource( 38 )
text = "Причина:"
align = 1
valign = 1

[node name="ScrollContainer" type="ScrollContainer" parent="died/Control"]
margin_left = 7.0
margin_top = 140.0
margin_right = 236.0
margin_bottom = 277.0
rect_min_size = Vector2( 229, 116 )

[node name="VBoxContainer" type="VBoxContainer" parent="died/Control/ScrollContainer"]
margin_right = 229.0
margin_bottom = 128.0
rect_min_size = Vector2( 229, 116 )
alignment = 2

[node name="Button" type="Button" parent="died/Control/ScrollContainer/VBoxContainer"]
margin_right = 229.0
margin_bottom = 40.0
rect_min_size = Vector2( 0, 40 )
custom_fonts/font = SubResource( 60 )
text = "Возродится"

[node name="Button3" type="Button" parent="died/Control/ScrollContainer/VBoxContainer"]
margin_top = 44.0
margin_right = 229.0
margin_bottom = 84.0
rect_min_size = Vector2( 0, 40 )
custom_fonts/font = SubResource( 60 )
text = "Наблюдать"

[node name="Button2" type="Button" parent="died/Control/ScrollContainer/VBoxContainer"]
margin_top = 88.0
margin_right = 229.0
margin_bottom = 128.0
rect_min_size = Vector2( 0, 40 )
custom_fonts/font = SubResource( 60 )
text = "В меню"

[node name="chat" type="Control" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
theme = ExtResource( 21 )
script = SubResource( 13 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ColorRect" type="ColorRect" parent="chat"]
margin_right = 350.0
margin_bottom = 370.0
color = Color( 0, 0, 0, 0.317647 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ItemList" type="ItemList" parent="chat"]
margin_right = 350.0
margin_bottom = 324.0
theme = SubResource( 64 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LineEdit" type="LineEdit" parent="chat"]
margin_top = 329.0
margin_right = 301.0
margin_bottom = 359.0
theme = SubResource( 54 )
placeholder_text = "Введите своё сообщение..."

[node name="Button" type="Button" parent="chat"]
margin_left = 305.0
margin_top = 332.0
margin_right = 342.0
margin_bottom = 358.0
theme = SubResource( 56 )
text = "ОК"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Chat" type="Button" parent="chat"]
margin_left = 358.0
margin_top = 7.0
margin_right = 448.0
margin_bottom = 97.0
rect_min_size = Vector2( 90, 0 )
focus_mode = 0
theme = SubResource( 158 )
enabled_focus_mode = 0
icon = ExtResource( 5 )
icon_align = 1
expand_icon = true
script = SubResource( 163 )

[node name="Animation" type="AnimationPlayer" parent="."]
autoplay = "Transition"
anims/RESET = SubResource( 97 )
anims/Transition = SubResource( 98 )
script = SubResource( 99 )

[connection signal="pressed" from="main/Control/TouchScreenButton" to="main" method="on_frame"]
[connection signal="released" from="main/Control/TouchScreenButton" to="main" method="on_frame"]
[connection signal="pressed" from="main/Shoot/Touch" to="main" method="frame"]
[connection signal="pressed" from="main/Shoot/Touch" to="main/Shoot" method="down"]
[connection signal="released" from="main/Shoot/Touch" to="main" method="frame"]
[connection signal="released" from="main/Shoot/Touch" to="main/Shoot" method="up"]
[connection signal="pressed" from="main/AndroidButtons/Frame2" to="main" method="frame"]
[connection signal="released" from="main/AndroidButtons/Frame2" to="main" method="frame"]
[connection signal="button_down" from="main/AndroidButtons/UseAll" to="main" method="frame"]
[connection signal="button_up" from="main/AndroidButtons/UseAll" to="main" method="frame"]
[connection signal="button_down" from="main/AndroidButtons/Drop" to="main" method="frame"]
[connection signal="button_down" from="main/AndroidButtons/Drop" to="main/AndroidButtons/Drop" method="down"]
[connection signal="button_up" from="main/AndroidButtons/Drop" to="main" method="frame"]
[connection signal="button_up" from="main/AndroidButtons/Drop" to="main/AndroidButtons/Drop" method="up"]
[connection signal="button_down" from="main/AndroidButtons/Use" to="main" method="frame"]
[connection signal="button_up" from="main/AndroidButtons/Use" to="main" method="frame"]
[connection signal="button_down" from="main/AndroidButtons/InventoryOpen" to="main" method="frame"]
[connection signal="button_up" from="main/AndroidButtons/InventoryOpen" to="main" method="frame"]
[connection signal="button_down" from="main/AndroidButtons/Chat" to="main" method="frame"]
[connection signal="button_up" from="main/AndroidButtons/Chat" to="main" method="frame"]
[connection signal="button_down" from="main/AndroidButtons/Close" to="main" method="frame"]
[connection signal="button_up" from="main/AndroidButtons/Close" to="main" method="frame"]
[connection signal="button_down" from="main/RunButtons/Left" to="main/RunButtons" method="left_down"]
[connection signal="button_up" from="main/RunButtons/Left" to="main/RunButtons" method="left_up"]
[connection signal="button_down" from="main/RunButtons/Right" to="main/RunButtons" method="right_down"]
[connection signal="button_up" from="main/RunButtons/Right" to="main/RunButtons" method="right_up"]
[connection signal="pressed" from="main/RunButtons/TouchLeft" to="main" method="frame"]
[connection signal="pressed" from="main/RunButtons/TouchLeft" to="main/RunButtons" method="left_down"]
[connection signal="released" from="main/RunButtons/TouchLeft" to="main" method="frame"]
[connection signal="released" from="main/RunButtons/TouchLeft" to="main/RunButtons" method="left_up"]
[connection signal="pressed" from="main/RunButtons/None" to="main" method="frame"]
[connection signal="released" from="main/RunButtons/None" to="main" method="frame"]
[connection signal="pressed" from="main/RunButtons/TouchRight" to="main" method="frame"]
[connection signal="pressed" from="main/RunButtons/TouchRight" to="main/RunButtons" method="right_down"]
[connection signal="released" from="main/RunButtons/TouchRight" to="main" method="frame"]
[connection signal="released" from="main/RunButtons/TouchRight" to="main/RunButtons" method="right_up"]
[connection signal="pressed" from="main/RunButtons/TouchUp" to="main" method="frame"]
[connection signal="pressed" from="main/RunButtons/TouchUp" to="main/JumpButtons" method="up_down"]
[connection signal="released" from="main/RunButtons/TouchUp" to="main" method="frame"]
[connection signal="released" from="main/RunButtons/TouchUp" to="main/JumpButtons" method="up_up"]
[connection signal="pressed" from="main/RunButtons/TouchDown2" to="main" method="frame"]
[connection signal="pressed" from="main/RunButtons/TouchDown2" to="main/JumpButtons" method="down_down"]
[connection signal="released" from="main/RunButtons/TouchDown2" to="main" method="frame"]
[connection signal="released" from="main/RunButtons/TouchDown2" to="main/JumpButtons" method="down_up"]
[connection signal="button_down" from="main/JumpButtons/Up" to="main/JumpButtons" method="up_down"]
[connection signal="button_up" from="main/JumpButtons/Up" to="main/JumpButtons" method="up_up"]
[connection signal="button_down" from="main/JumpButtons/Down" to="main/JumpButtons" method="down_down"]
[connection signal="button_up" from="main/JumpButtons/Down" to="main/JumpButtons" method="down_up"]
[connection signal="pressed" from="main/JumpButtons/TouchUp" to="main" method="frame"]
[connection signal="pressed" from="main/JumpButtons/TouchUp" to="main/JumpButtons" method="up_down"]
[connection signal="released" from="main/JumpButtons/TouchUp" to="main" method="frame"]
[connection signal="released" from="main/JumpButtons/TouchUp" to="main/JumpButtons" method="up_up"]
[connection signal="pressed" from="main/JumpButtons/TouchDown" to="main" method="frame"]
[connection signal="pressed" from="main/JumpButtons/TouchDown" to="main/JumpButtons" method="down_down"]
[connection signal="released" from="main/JumpButtons/TouchDown" to="main" method="frame"]
[connection signal="released" from="main/JumpButtons/TouchDown" to="main/JumpButtons" method="down_up"]
[connection signal="pressed" from="main/JumpButtons/Frame" to="main" method="frame"]
[connection signal="released" from="main/JumpButtons/Frame" to="main" method="frame"]
[connection signal="animation_finished" from="Animation" to="Animation" method="finished"]
