[gd_scene load_steps=8 format=2]

[ext_resource path="res://textures/people/phase_firefly/phase_firefly.png" type="Texture2D" id=1]
[ext_resource path="res://scenes/modules/syncing_render.tscn" type="PackedScene" id=2]

[sub_resource type="GDScript" id=5]
script/source = "extends CharacterBody2D

@onready var SD = get_node(\"/root/rootGame/Node/SettingData\")

var vect = Vector2()
var speed = Vector2(300, 300)

func _init():
	add_to_group(\"phase_firefly\")

func _ready():
	vect = Vector2(randf_range(-speed.x, speed.x), randf_range(-speed.y, speed.y))
	$Timer.connect(\"timeout\", Callable(self, \"event\"))
	$Timer.start()

func _process(_delta):
	if G.my_id() == $Sing.cur:
		if vect.x > 0 and $Right.is_colliding():
			vect.x = randf_range(-speed.x, -speed.x/2)
		elif vect.x < 0 and $Left.is_colliding():
			vect.x = randf_range(speed.x/2, speed.x)
		
		if vect.x < 0:
			$Animated.flip_h = false
		else:
			$Animated.flip_h = true
		
		if vect.y > 0 and $Up.is_colliding():
			vect.y = randf_range(speed.y/2, speed.y)
		elif vect.y < 0 and $Bottom.is_colliding():
			vect.y = randf_range(-speed.y, -speed.y/2)
		
		set_velocity(vect)
		move_and_slide()
		vect = velocity
		if get_tree().network_peer != null:
			get_node(\"/root/rootGame\").rpc_unreliable(\"event_state\", [$Animated.flip_h, global_position])

@rpc("any_peer") func event_state(dat):
	global_position = dat[1]
	$Anim.flip_h = dat[0]

func damage(data):
	if data[\"bullet\"][1].size() > 0 and data[\"bullet\"][1][\"item\"] == \"power_flask\":
		var slot = get_node(\"/root/rootGame/Node/Player/Camera2D/interface/clothes/Control/AdditionalArmSlot\")
		
		var dat = slot.data_repair({\"item\": \"firefly_power_flask\"}, {})
		slot.significant_data = dat[0]
		slot.insignificant_data = dat[1]
		
		slot.installation_item()
		
		$Sing.manager_signals.signal_event(\"damage\", self)
		
		Firebase.logEvent(\"npc_died\", {\"npc\": {\"value\": \"phase_firefly\", \"type\": \"string\"}})
		queue_free()
	else:
		var pos = data[\"position\"] + Vector2($Collision.shape.radius*3, 0).rotated(data[\"rotation\"])
		
		get_node(\"/root/rootGame\").create_bullet(data[\"gan\"], data[\"bullet\"], pos, data[\"rotation\"], data[\"texture\"], data[\"damage\"], data[\"attraction\"], data[\"speed\"], data[\"instantly\"], data[\"output\"], self)


func event():
	vect = Vector2(randf_range(-speed.x, speed.x), randf_range(-speed.y, speed.y))
"

[sub_resource type="CircleShape2D" id=1]
radius = 29.8263

[sub_resource type="AtlasTexture" id=27]
atlas = ExtResource( 1 )
region = Rect2( 0, 0, 32, 32 )

[sub_resource type="AtlasTexture" id=28]
atlas = ExtResource( 1 )
region = Rect2( 32, 0, 32, 32 )

[sub_resource type="SpriteFrames" id=4]
animations = [ {
"frames": [ SubResource( 27 ), SubResource( 28 ) ],
"loop": true,
"name": "default",
"speed": 3.0
} ]

[node name="Phase Firefly" type="CharacterBody2D"]
collision_layer = 5
collision_mask = 6
script = SubResource( 5 )

[node name="Collision" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )

[node name="Animated" type="AnimatedSprite2D" parent="."]
scale = Vector2( 2, 2 )
frames = SubResource( 4 )
playing = true

[node name="Sing" parent="." instance=ExtResource( 2 )]

[node name="Up" type="RayCast2D" parent="."]
position = Vector2( 0, -30 )
rotation = -3.14159
enabled = true
target_position = Vector2( 0, 30 )

[node name="Bottom" type="RayCast2D" parent="."]
position = Vector2( 0, 30 )
enabled = true
target_position = Vector2( 0, 30 )

[node name="Right" type="RayCast2D" parent="."]
position = Vector2( 30, 0 )
rotation = -1.5708
enabled = true
target_position = Vector2( 0, 30 )

[node name="Left" type="RayCast2D" parent="."]
position = Vector2( -30, 0 )
rotation = 1.5708
enabled = true
target_position = Vector2( 0, 30 )

[node name="Timer" type="Timer" parent="."]
wait_time = 2.0

[connection signal="timeout" from="Timer" to="." method="event"]
