[gd_scene load_steps=37 format=2]

[ext_resource path="res://textures/ui/logos/sphere_main.png" type="Texture" id=1]
[ext_resource path="res://textures/people/player/idle.png" type="Texture" id=2]
[ext_resource path="res://textures/people/player/fall.png" type="Texture" id=3]
[ext_resource path="res://textures/people/player/jump.png" type="Texture" id=4]
[ext_resource path="res://textures/people/player/duck.png" type="Texture" id=5]
[ext_resource path="res://textures/people/player/run.png" type="Texture" id=6]
[ext_resource path="res://textures/ui/clothes.png" type="Texture" id=7]
[ext_resource path="res://scripts/entities/player.gd" type="Script" id=8]
[ext_resource path="res://textures/white.jpg" type="Texture" id=9]
[ext_resource path="res://scenes/interface/player_interface.tscn" type="PackedScene" id=10]

[sub_resource type="AtlasTexture" id=79]
atlas = ExtResource( 5 )
region = Rect2( 0, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=80]
atlas = ExtResource( 5 )
region = Rect2( 40, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=81]
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=82]
atlas = ExtResource( 3 )
region = Rect2( 40, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=83]
atlas = ExtResource( 3 )
region = Rect2( 80, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=84]
atlas = ExtResource( 3 )
region = Rect2( 120, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=85]
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=86]
atlas = ExtResource( 2 )
region = Rect2( 40, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=87]
atlas = ExtResource( 2 )
region = Rect2( 80, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=88]
atlas = ExtResource( 2 )
region = Rect2( 120, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=89]
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=90]
atlas = ExtResource( 4 )
region = Rect2( 40, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=91]
atlas = ExtResource( 4 )
region = Rect2( 80, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=92]
atlas = ExtResource( 6 )
region = Rect2( 0, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=93]
atlas = ExtResource( 6 )
region = Rect2( 40, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=94]
atlas = ExtResource( 6 )
region = Rect2( 80, 0, 40, 80 )

[sub_resource type="AtlasTexture" id=95]
atlas = ExtResource( 6 )
region = Rect2( 120, 0, 40, 80 )

[sub_resource type="SpriteFrames" id=24]
animations = [ {
"frames": [ SubResource( 79 ), SubResource( 80 ) ],
"loop": false,
"name": "duck",
"speed": 5.0
}, {
"frames": [ SubResource( 81 ), SubResource( 82 ), SubResource( 83 ), SubResource( 84 ) ],
"loop": true,
"name": "fall",
"speed": 5.0
}, {
"frames": [ SubResource( 85 ), SubResource( 86 ), SubResource( 87 ), SubResource( 88 ) ],
"loop": true,
"name": "idle",
"speed": 5.0
}, {
"frames": [ SubResource( 89 ), SubResource( 90 ), SubResource( 91 ) ],
"loop": false,
"name": "jump",
"speed": 5.0
}, {
"frames": [ SubResource( 92 ), SubResource( 93 ), SubResource( 94 ), SubResource( 95 ) ],
"loop": true,
"name": "run",
"speed": 5.0
} ]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 25, 41 )

[sub_resource type="RectangleShape2D" id=5]
extents = Vector2( 25, 30.3125 )

[sub_resource type="GDScript" id=3]
script/source = "extends Area2D

func _ready():
	$\"../Camera2D/interface/main\".connect(\"frame_close\", self, \"reset\")

func _process(_delta):
	self.set_global_position(get_global_mouse_position())
	
	$\"../Camera2D/interface/MoveItem/TextureRect\".hide()
	
	if $\"../Camera2D/interface/main\".visible == true:
		var datas = get_overlapping_areas()+get_overlapping_bodies() # получить все Area2D, с которыми пересекается UseArea игрок
		for data in datas:
			if data.has_method(\"use\"):
				$\"../Camera2D/interface/MoveItem/TextureRect\".show()
				return
		
		var tile_map = get_node(\"/root/rootGame/Node/TileMap\")
		
		var local_position = tile_map.to_local(global_position)
		var map_position = tile_map.world_to_map(local_position)
		
		if tile_map.tiles.has(int(map_position.x)) and tile_map.tiles[int(map_position.x)].has(int(map_position.y)) and tile_map.get_node_or_null(\"TileLogical/\"+str(tile_map.tiles[int(map_position.x)][int(map_position.y)][\"tile_name\"])) != null and tile_map.get_node(\"TileLogical/\"+str(tile_map.tiles[int(map_position.x)][int(map_position.y)][\"tile_name\"])).has_method(\"use_tile\"):
			$\"../Camera2D/interface/MoveItem/TextureRect\".show()


var not_use_ui = true
func reset():
	not_use_ui = false
	#print(\"RESET\")
func _input(event):
	if G.game_settings[\"mobile\"]:
		if not get_node(\"../Camera2D/interface/main\").visible or not event is InputEventScreenTouch or event.get(\"pressed\") == true: 
			return
	
	yield(get_tree(), \"idle_frame\")
	
	if !not_use_ui:
		not_use_ui = true
		return
	
	if get_node(\"../Camera2D/interface/MoveItem\").significant_data.hash() == get_node(\"../Camera2D/interface/MoveItem/HandSlot\").default_significant_data.hash() and get_node(\"../Camera2D/interface/main\").visible == true:
		#print(\"INPUT\")
		if Input.is_action_just_pressed(\"RBM\") or (G.game_settings[\"mobile\"] and !get_node(\"../Camera2D/interface/main/AndroidButtons/Use\").pressed):
			var tile_map = get_node(\"/root/rootGame/Node/TileMap\")
			
			var local_position = tile_map.to_local(global_position)
			var map_position = tile_map.world_to_map(local_position)
			
			if tile_map.tiles.has(int(map_position.x)) and tile_map.tiles[int(map_position.x)].has(int(map_position.y)):
				var d = tile_map.tile_set.tile_get_texture(tile_map.tile_set.find_tile_by_name(tile_map.tiles[int(map_position.x)][int(map_position.y)][\"tile_name\"])).get_size() / tile_map.cell_size
				
				if 1+tile_map.tiles[int(map_position.x)][int(map_position.y)][\"autotile_coord\"].x < d.x:
					tile_map.edit_tile(map_position, {\"autotile_coord\": {\"operation\": 1, \"value\": Vector2(1, 0)}})
					if get_tree().network_peer != null:
						tile_map.rpc(\"edit_tile\", map_position, {\"autotile_coord\": {\"operation\": 1, \"value\": Vector2(1, 0)}})
		elif Input.is_action_just_pressed(\"Use\") or (G.game_settings[\"mobile\"] and get_node(\"../Camera2D/interface/main/AndroidButtons/Use\").pressed):
			var tile_map = get_node(\"/root/rootGame/Node/TileMap\")
			
			var local_position = tile_map.to_local(global_position)
			var map_position = tile_map.world_to_map(local_position)
			
			var datas = get_overlapping_areas()+get_overlapping_bodies() # получить все Area2D, с которыми пересекается UseArea игрок
			for data in datas:
				if data.has_method(\"use\"):
					data.use(get_parent(), G.my_id())
			
			if tile_map.tiles.has(int(map_position.x)) and tile_map.tiles[int(map_position.x)].has(int(map_position.y)):
				tile_map.use_tile({\"pos\": map_position, \"method\": \"use_tile\"})
				#if get_tree().network_peer != null:
				#	tile_map.rpc(\"use_tile\", {\"pos\": map_position, \"method\": \"use_tile\"})
"

[sub_resource type="CircleShape2D" id=4]
radius = 6.06493

[sub_resource type="GDScript" id=26]
script/source = "extends Area2D

func _ready():
	$\"../Camera2D/interface/main/AndroidButtons/UseAll\".connect(\"pressed\", self, \"use_d\")

func _process(_delta):
	if $\"../Camera2D/interface/main\".visible == true and G.game_settings[\"mobile_use_all\"]:
		var datas = get_overlapping_areas()+get_overlapping_bodies() # получить все Area2D, с которыми пересекается UseArea игрок
		for data in datas:
			if data.has_method(\"use\"):
				$\"../Camera2D/interface/main/AndroidButtons/UseAll\".show()
				return
		$\"../Camera2D/interface/main/AndroidButtons/UseAll\".hide()

func use_d():
	if $\"../Camera2D/interface/main\".visible == true and G.game_settings[\"mobile_use_all\"]:
		var datas = get_overlapping_areas()+get_overlapping_bodies() # получить все Area2D, с которыми пересекается UseArea игрок
		for data in datas:
			if data.has_method(\"use\"):
				data.use(get_parent(), G.my_id())
"

[sub_resource type="RectangleShape2D" id=25]
extents = Vector2( 23, 38 )

[sub_resource type="GDScript" id=96]
script/source = "extends Area2D


func jump_access() -> bool:
	var bodies = get_overlapping_bodies()
	
	bodies.erase(get_parent())
	
	if bodies.size() > 0:
		return true
	return false
"

[sub_resource type="RectangleShape2D" id=97]
extents = Vector2( 30, 40 )

[node name="Player" type="KinematicBody2D"]
collision_layer = 5
collision_mask = 6
script = ExtResource( 8 )

[node name="SphereMain" type="Sprite" parent="."]
visible = false
position = Vector2( -9, -63 )
texture = ExtResource( 1 )

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
margin_left = -25.0
margin_top = -41.0
margin_right = 25.0
margin_bottom = 41.0
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="."]
visible = false
margin_left = -25.0
margin_top = -41.0
margin_right = 25.0
margin_bottom = 41.0
texture = ExtResource( 7 )
expand = true

[node name="Anim" type="AnimatedSprite" parent="."]
scale = Vector2( 1.25, 1.025 )
frames = SubResource( 24 )
animation = "duck"
frame = 1
playing = true

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="sat_down" type="CollisionShape2D" parent="."]
position = Vector2( 0, 10.6875 )
shape = SubResource( 5 )
__meta__ = {
"_edit_lock_": true
}

[node name="Timer" type="Timer" parent="."]
wait_time = 0.01
autostart = true

[node name="Camera2D" type="Camera2D" parent="."]
current = true
smoothing_speed = 30.0
__meta__ = {
"_edit_group_": true,
"_edit_lock_": true
}

[node name="interface" parent="Camera2D" instance=ExtResource( 10 )]

[node name="Node2D" type="Node2D" parent="."]
position = Vector2( 0, -9 )

[node name="Sprite" type="TextureRect" parent="Node2D"]
margin_left = 24.0
margin_top = -14.0
margin_right = 56.0
margin_bottom = 18.0
expand = true

[node name="Position2D" type="Position2D" parent="Node2D"]
position = Vector2( 63.8141, 0 )
rotation = 3.14159

[node name="RayCast2D" type="RayCast2D" parent="Node2D"]
position = Vector2( 57.656, 0 )
rotation = -1.57079
enabled = true
cast_to = Vector2( 0, 30 )
collision_mask = 1048575
__meta__ = {
"_edit_lock_": true
}

[node name="hunger" type="Timer" parent="."]

[node name="thirst" type="Timer" parent="."]

[node name="global_mouse_position" type="Area2D" parent="."]
collision_layer = 1048575
collision_mask = 1048575
script = SubResource( 3 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="global_mouse_position"]
shape = SubResource( 4 )

[node name="Area2D" type="Area2D" parent="."]
script = SubResource( 26 )

[node name="CollisionShape2D2" type="CollisionShape2D" parent="Area2D"]
shape = SubResource( 25 )

[node name="Light" type="Light2D" parent="."]
scale = Vector2( 12270, -7760 )
texture = ExtResource( 9 )
energy = 0.5
shadow_enabled = true
shadow_color = Color( 0, 0, 0, 1 )

[node name="Light2" type="Light2D" parent="."]
visible = false
scale = Vector2( 12270, -7760 )
texture = ExtResource( 9 )
energy = 0.5
mode = 2
shadow_enabled = true
shadow_color = Color( 0, 0, 0, 1 )
shadow_gradient_length = 0.1

[node name="Wait_ui" type="Timer" parent="."]
wait_time = 0.3
one_shot = true

[node name="jump" type="Area2D" parent="."]
collision_layer = 255
collision_mask = 255
script = SubResource( 96 )

[node name="collision" type="CollisionShape2D" parent="jump"]
shape = SubResource( 97 )

[node name="coupling_time" type="Timer" parent="."]
wait_time = 0.1
